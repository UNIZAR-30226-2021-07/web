{"version":3,"sources":["components/SessionProvider.js","components/UsersProvider.js","components/GameProvider.js","reportWebVitals.js","components/popups/PopUp.js","assets/common/icons/warning.svg","components/popups/ErrorPopup.js","components/WebSockets.js","components/popups/StartGamePopup.js","assets/common/icons/tick.svg","assets/common/icons/clipboard.svg","components/popups/CreateGamePopup.js","components/popups/PreparingPrivateGamePopup.js","components/popups/JoinPrivateGamePopup.js","components/popups/JoinPublicGamePopup.js","utils/api.js","assets/common/logo/logo.svg","assets/common/icons/tienda.svg","assets/common/icons/huella.svg","assets/common/icons/help.svg","utils/json.js","components/Menu.js","components/Message.js","components/MessageList.js","assets/common/icons/send.svg","components/Chat.js","components/game/Card.js","components/game/Hand.js","components/game/CardStack.js","components/game/Body.js","components/game/PlayerBox.js","assets/common/icons/fuegos-artificiales.png","components/Board.js","components/Timer.js","assets/common/icons/pause.svg","components/popups/PausePopup.js","assets/common/icons/medalla-oro.svg","assets/common/icons/medalla-plata.svg","assets/common/icons/medalla-bronce.svg","assets/common/icons/diploma.svg","components/popups/LeaderboardPopup.js","components/popups/LeaveGamePopup.js","assets/common/cards/cuerpo_cerebro.png","assets/common/cards/cuerpo_corazon.png","assets/common/cards/cuerpo_estomago.png","assets/common/cards/cuerpo_hueso.png","assets/common/cards/cuerpo_full.png","assets/common/cards/virus_a.png","assets/common/cards/virus_b.png","assets/common/cards/virus_c.png","assets/common/cards/virus_d.png","assets/common/cards/virus_e.png","assets/common/cards/medicina_jarabe.png","assets/common/cards/medicina_jeringuilla.png","assets/common/cards/medicina_medikit.png","assets/common/cards/medicina_pastis.png","assets/common/cards/medicina_tiritas.png","assets/common/cards/especial_operacion.png","assets/common/cards/especial_robaorganos.png","assets/common/cards/especial_tos.png","assets/common/cards/especial_guantes.png","assets/common/cards/especial_radiografia.png","components/popups/HelpPopup.js","assets/common/icons/logout.svg","components/Match.js","components/Login.js","components/Profile.js","components/popups/DeleteAccountPopup.js","assets/common/icons/camera.svg","components/EditProfile.js","components/SignUp.js","assets/common/icons/candado.svg","assets/common/icons/check.svg","components/popups/ConfirmPurchasePopup.js","components/PurchasableBox.js","components/PurchasablesList.js","components/Shop.js","components/Help.js","components/App.js","index.js"],"names":["SessionContext","React","createContext","SessionProvider","children","useState","key","initialValue","value","window","localStorage","getItem","JSON","parse","e","getLocalStorage","token","setToken","socket","useRef","socketChange","setSocketChange","updateSocket","setUpdateSocket","onMatch","setOnMatch","userData","setUserData","useEffect","setItem","stringify","setLocalStorage","Provider","NumUsersContext","UsersProvider","users","setUsers","GameContext","GameProvider","session","useContext","history","useHistory","messages","setMessages","isPrivate","setIsPrivate","isPaused","setIsPaused","pausedBy","setPausedBy","hand","setHand","bodies","setBodies","bodiesRef","currentTurn","setCurrentTurn","changeTurn","setChangeTurn","changeTurnRef","players","setPlayers","playersRef","transplantData","setTransplantData","leaderboard","setLeaderboard","isFinished","setIsFinished","ownFinished","setOwnFinished","remTurnTime","setRemTurnTime","current","on","owner","msg","prev","userid","text","off","response","current_turn","map","player","i","length","name","is_ai","push","ia_player","auxUser","bodyKeys","Object","keys","auxBodies","bodyKey","paused","paused_by","finished","Math","floor","remaining_turn_secs","coins","msgs","game","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Popup","title","icon","close","onClose","PopupboxManager","Container","Row","className","Image","src","style","height","fluid","Button","onClick","ErrorPopup","body","warning","width","renderErrorPopup","content","open","config","fadeIn","fadeInSpeed","leaveGame","console","log","emit","error","StartGamePopup","userContext","handleClick","a","preventDefault","OverlayTrigger","placement","overlay","Tooltip","id","disabled","renderStartGamePopup","escClose","overlayClose","copyCode","codeField","document","getElementById","focus","select","execCommand","CreateGamePopup","code","tick","type","clipboard","size","readOnly","aria-label","aria-describedby","PreparingPrivateGamePopup","once","role","JoinPrivateGamePopup","setCode","Form","onSubmit","renderPreparingPrivateGamePopup","minLength","maxLength","placeholder","onChange","target","curiosities","JoinPublicGamePopup","stopSearchingGame","serverRequest","path","requestOptions","fetch","ok","json","catch","status","email","password","URLSearchParams","append","method","logoutUser","headers","Authorization","signUpUser","deleteUser","getUserData","modifyUser","username","shopBuy","getProfile","photo","process","profile_pics","image","getBoard","board","boards","cost","Menu","picture","setPicture","numCoins","setNumCoins","pictureURL","purchases","Col","to","alt","roundedCircle","shop","logo","lg","renderCreateGamePopup","renderJoinPrivateGamePopup","callback","renderJoinPublicGamePopup","help","Message","message","ListGroup","Item","MessageList","messagesEndRef","scrollIntoView","behavior","idx","ref","Chat","setMessage","sendMessage","send","Card","cardImg","card","slot","kind","cards","find","elem","color","card_type","treatment_type","searchCard","getCard","drag","dataTransfer","setData","onDragStart","Hand","horizontal","minHeight","CardStack","organ_pile","onDrop","getData","parseInt","undefined","aux","playCard","onDragOver","Body","cardStacks","newBody","stack","ind","newStack","organ","modifiers","modifier","PlayerBox","display_name","isTurn","profile","Title","Board","numRivals","setNumRivals","gamePlayers","setGamePlayers","Player1","Player2","Player3","index","Player4","Player5","playPass","fuegos","playDiscard","Timer","isPlaying","setIsPlaying","duration","colors","strokeWidth","onComplete","remainingTime","fontSize","renderTime","PausePopup","restartGame","pauseIcon","renderPausePopup","LeaderboardPopup","sort","player1","player2","position","oro","plata","bronce","diploma","dinero","LeaveGamePopup","HelpPopup","Text","Img","organ1","organ2","organ3","organ4","organ5","virus1","virus2","virus3","virus4","virus5","medicina1","medicina2","medicina3","medicina4","medicina5","tratamiento1","tratamiento2","tratamiento3","tratamiento4","tratamiento5","Match","renderLeaderboardPopup","pauseGame","md","backgroundImage","exit","fadeOut","fadeOutSpeed","renderLeaveGamePopup","renderHelpPopup","Login","setEmail","setPassword","loginUser","access_token","Group","controlId","Label","Control","Profile","games","setGames","wins","setWins","losses","setLosses","timePlayed","setTimePlayed","getUserStats","playtime_mins","thumbnail","Table","borderless","DeleteAccountPopup","EditProfile","setBoard","newUserName","setNewUserName","confirmPassword","setConfirmPassword","boardURL","handleSubmit","camera","renderDeleteAccountPopup","rounded","SignUp","setName","ConfirmPurchasePopup","price","PurchasableBox","avatar","isBought","setIsBought","isSelected","setIsSelected","elt","eltPrice","some","item_id","changeUserData","ImgOverlay","check","renderConfirmPurchasePopup","lock","coinImg","PurchasablesList","elements","elemsLength","rangeIA","sm","Shop","setCoins","Help","ProtectedRoute","Component","component","rest","render","props","ProtectedMatchRoute","App","usersProvider","io","connect","extraHeaders","ReactDOM","basename","env","PUBLIC_URL"],"mappings":"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","file":"static/js/main.cea1a46a.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nexport var SessionContext = React.createContext();\n\nfunction setLocalStorage(key, value) {\n  try {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  } catch (e) {\n    // catch possible errors:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n  }\n}\n\nfunction getLocalStorage(key, initialValue) {\n  try {\n    const value = window.localStorage.getItem(key);\n    return value ? JSON.parse(value) : initialValue;\n  } catch (e) {\n    // if error, return initial value\n    return initialValue;\n  }\n}\n\nfunction SessionProvider({ children }) {\n  const [token, setToken] = useState(() => getLocalStorage(\"token\", null));\n  // Para poder coger el valor que se le asigna desde el useEffect\n  // con current se referencia a este objeto desde fuera\n  const socket = useRef(null);\n  const [socketChange, setSocketChange] = useState(1);\n  // Actua como un flag. En el momento en el que se cambia se dispara la\n  // obtención de un nuevo socket en \"App\".\n  const [updateSocket, setUpdateSocket] = useState(1);\n  // Flag de estar o no en partida\n  const [onMatch, setOnMatch] = useState(false);\n  const [userData, setUserData] = useState([]);\n\n  useEffect(() => {\n    // Guardamos el token cuando se actualiza\n    setLocalStorage(\"token\", token);\n  }, [token]);\n\n  return (\n    <SessionContext.Provider\n      value={{\n        token: token,\n        socket: socket,\n        socketChange: socketChange,\n        updateSocket: updateSocket,\n        onMatch: onMatch,\n        userData: userData,\n        setToken: (token) => setToken(token),\n        setSocketChange: (socketChange) => setSocketChange(socketChange),\n        setUpdateSocket: (updateSocket) => setUpdateSocket(updateSocket),\n        setOnMatch: (onMatch) => setOnMatch(onMatch),\n        setUserData: (userData) => setUserData(userData),\n      }}\n    >\n      {children}\n    </SessionContext.Provider>\n  );\n}\n\nexport default SessionProvider;\n","import React, { useState } from \"react\";\n\nexport var NumUsersContext = React.createContext();\n\nfunction UsersProvider({ children }) {\n  const [users, setUsers] = useState(0);\n\n  return (\n    <NumUsersContext.Provider\n      value={{\n        users: users,\n        setUsers: (users) => setUsers(users),\n      }}\n    >\n      {children}\n    </NumUsersContext.Provider>\n  );\n}\n\nexport default UsersProvider;\n","import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { SessionContext } from \"./SessionProvider\";\n\nexport var GameContext = React.createContext();\n\nfunction GameProvider({ children }) {\n  const session = useContext(SessionContext);\n  const history = useHistory();\n  const [messages, setMessages] = useState([]);\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [pausedBy, setPausedBy] = useState(\"\");\n\n  // Game variables\n  const [hand, setHand] = useState([]);\n\n  // Diccionario con los bodys de todos los jugadores\n  const [bodies, setBodies] = useState({});\n  const bodiesRef = useRef(bodies);\n  const [currentTurn, setCurrentTurn] = useState(\"\");\n  const [changeTurn, setChangeTurn] = useState(0);\n  const changeTurnRef = useRef(changeTurn);\n\n  const [players, setPlayers] = useState([]);\n  const playersRef = useRef(players);\n\n  // Transplant variables\n  const [transplantData, setTransplantData] = useState({});\n\n  const [leaderboard, setLeaderboard] = useState({});\n  const [isFinished, setIsFinished] = useState(false);\n  const [ownFinished, setOwnFinished] = useState(false);\n\n  // Set to 30 by default\n  const [remTurnTime, setRemTurnTime] = useState(30);\n\n  useEffect(() => {\n    if (!session.socket.current) {\n      return;\n    }\n    session.socket.current.on(\"chat\", function ({ owner, msg }) {\n      setMessages((prev) => [...prev, { userid: owner, text: msg }]);\n    });\n\n    return () => {\n      // Delete previous listenings and clean variables\n      setMessages([]);\n      session.socket.current.off(\"chat\");\n    };\n  }, [session.socketChange]);\n\n  // Listen to \"game_update\" events from server\n  useEffect(() => {\n    if (!session.socket.current) {\n      return;\n    }\n\n    session.socket.current.on(\"game_update\", (response) => {\n      if (response != null) {\n        if (\"current_turn\" in response) {\n          setRemTurnTime(30);\n          setTransplantData({});\n          setCurrentTurn(response.current_turn);\n          setChangeTurn((changeTurnRef.current + 1) % 2);\n          changeTurnRef.current = (changeTurnRef.current + 1) % 2;\n        }\n        if (\"hand\" in response) {\n          setHand(response.hand);\n        }\n        if (\"players\" in response) {\n          // Set players on game -> {board, name, display_name, picture}\n          let users = [];\n          // Traverse players list and update it, deleting the ones that are\n          // not in the list and leaving the ones that still are\n          playersRef.current.map((player) => {\n            // Search player in players response -> if it exist apend if not don't\n            var i = 0;\n            for (i; i < response.players.length; i++) {\n              if (response.players[i].name == player.name) {\n                // Add to list\n                // Check if is ai\n                if (response.players[i].is_ai == true) {\n                  // Check if it own player replaced by AI -> get out of the match\n                  if (response.players[i].name == session.userData.name) {\n                    // Get out of match\n                    // When leaving, change updateSocket to get a new socket\n                    session.setUpdateSocket((session.updateSocket + 1) % 2);\n                    history.push(\"/home\");\n                    return;\n                  } else {\n                    // Set received player instead of current one\n                    // adding its display name as ai_bot\n                    let ia_player = response.players[i];\n                    ia_player[\"display_name\"] = ia_player.name + \" [BOT]\";\n                    users = [...users, ia_player];\n                  }\n                } else {\n                  // Set ordinary one (not ai)\n                  users = [...users, player];\n                }\n              }\n            }\n          });\n\n          // Add new players (e.g. at the beggining)\n          response.players.map((player) => {\n            // Search if it is not in users list\n            var i = 0;\n            for (i; i < users.length; i++) {\n              if (player.name == users[i].name) {\n                break;\n              }\n            }\n            if (i == users.length) {\n              // Add player to list of players as new player\n              // Adding new key: display_name (the same as its name at this point)\n              player[\"display_name\"] = player.name;\n              users = [...users, player];\n            }\n          });\n\n          // Set own user the first on the list of players\n          for (var i = 0; i < users.length; i++) {\n            if (users[i].name == session.userData.name) {\n              let auxUser = users[0];\n              users[0] = users[i];\n              users[i] = auxUser;\n            }\n          }\n\n          playersRef.current = users;\n          setPlayers(users);\n        }\n        if (\"bodies\" in response) {\n          // Update corresponding body in bodies -> if !exist create a new\n          // entry in the dictionary\n\n          // Get keys in received bodies\n          let bodyKeys = Object.keys(response.bodies);\n\n          let auxBodies = { ...bodiesRef.current };\n\n          bodyKeys.map((bodyKey) => {\n            auxBodies[bodyKey] = response.bodies[bodyKey];\n          });\n          bodiesRef.current = auxBodies;\n          setBodies(auxBodies);\n        }\n\n        if (\"paused\" in response) {\n          setIsPaused(response.paused);\n          setPausedBy(response.paused_by);\n        }\n\n        if (\"finished\" in response) {\n          if (response.finished) {\n            // La partida ha terminado\n            setIsFinished(response.finished);\n            setLeaderboard(response.leaderboard);\n            // Se limpia la mano, para quitar esa zona manteniendo el tamaño\n            setHand([]);\n          }\n        }\n\n        if (\"remaining_turn_secs\" in response) {\n          setRemTurnTime(Math.floor(response.remaining_turn_secs));\n          // To update timer with corresponding remainder time\n          setChangeTurn((changeTurnRef.current + 1) % 2);\n          changeTurnRef.current = (changeTurnRef.current + 1) % 2;\n        }\n\n        if (\"leaderboard\" in response) {\n          // Alguien ha terminado. Si es el propio user, quitar cartas\n          // de body y de hand\n          // Ver si el propio user tiene los campos a null o no\n          if (response.leaderboard[session.userData.name].coins) {\n            // Se limpia la mano, para quitar esa zona manteniendo el tamaño\n            setHand([]);\n            setOwnFinished(true);\n          }\n        }\n      }\n    });\n\n    return () => {\n      // Delete previous listenings and clean variables\n      setHand([]);\n      bodiesRef.current = {};\n      setBodies({});\n      setCurrentTurn(\"\");\n      playersRef.current = [];\n      setPlayers([]);\n      session.socket.current.off(\"game_update\");\n      setIsPaused(false);\n      setPausedBy(\"\");\n      setTransplantData({});\n      setLeaderboard({});\n      setIsFinished(false);\n      setRemTurnTime(30);\n      setOwnFinished(false);\n    };\n  }, [session.socketChange]);\n\n  return (\n    <GameContext.Provider\n      value={{\n        messages: messages,\n        setMessages: (msgs) => setMessages(msgs),\n        hand: hand,\n        bodies: bodies,\n        currentTurn: currentTurn,\n        changeTurn: changeTurn,\n        players: players,\n        isPrivate: isPrivate,\n        setIsPrivate: (game) => setIsPrivate(game),\n        isPaused,\n        pausedBy,\n        transplantData: transplantData,\n        isFinished,\n        leaderboard,\n        ownFinished,\n        setTransplantData: (data) => setTransplantData(data),\n        remTurnTime,\n      }}\n    >\n      {children}\n    </GameContext.Provider>\n  );\n}\n\nexport default GameProvider;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { PopupboxManager } from \"react-popupbox\";\nimport { Container, Row, Image, Button } from \"react-bootstrap\";\n\nexport default function Popup({\n  title,\n  icon,\n  close,\n  onClose = PopupboxManager.close,\n  children,\n}) {\n  function handleClose() {\n    PopupboxManager.close();\n    onClose();\n  }\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center mb-2 align-items-center\">\n        <Image\n          src={icon}\n          className=\"mr-2\"\n          style={{ height: \"30px\" }}\n          fluid\n        ></Image>\n        <h2 className=\"popup-title mb-0\">{title}</h2>\n        {close && (\n          <Button className=\"close\" onClick={handleClose}>\n            &times;\n          </Button>\n        )}\n      </Row>\n      {children}\n    </Container>\n  );\n}\n\nexport function openPopup(title, icon, close, onCloseAction) {\n  const content = (\n    <Popup\n      title={title}\n      icon={icon}\n      close={close}\n      onCloseAction={onCloseAction}\n    />\n  );\n  PopupboxManager.open({\n    content,\n    config: {\n      fadeIn: true,\n      fadeInSpeed: 400,\n    },\n  });\n}\n","export default __webpack_public_path__ + \"static/media/warning.fc36c733.svg\";","import React from \"react\";\nimport { PopupboxManager } from \"react-popupbox\";\nimport { Button } from \"react-bootstrap\";\n\nimport Popup from \"./PopUp\";\n\nimport warning from \"../../assets/common/icons/warning.svg\";\n\nexport default function ErrorPopup({ body, title = \"¡Atención!\" }) {\n  return (\n    <Popup title={title} icon={warning}>\n      <p className=\"text-center\">{body}</p>\n      <Button\n        className=\"primary-button\"\n        onClick={PopupboxManager.close}\n        style={{ width: \"100%\" }}\n      >\n        Aceptar\n      </Button>\n    </Popup>\n  );\n}\n\nexport function renderErrorPopup(body, title) {\n  const content = <ErrorPopup title={title} body={body} />;\n  PopupboxManager.open({\n    content,\n    config: {\n      fadeIn: true,\n      fadeInSpeed: 400,\n    },\n  });\n}\n","import { renderErrorPopup } from \"./popups/ErrorPopup\";\n\nexport function leaveGame({ socket }) {\n  console.log(\"LEAVE GAME\");\n  socket.current.emit(\"leave\", (data) => {\n    if (data && data.error) {\n      console.log(data.error);\n    }\n  });\n}\n\nexport function stopSearchingGame({ socket }) {\n  socket.current.off(\"found_game\");\n  socket.current.emit(\"stop_searching\", (data) => {\n    if (data && data.error) {\n      console.log(data.error);\n    }\n  });\n}\n\nexport function playCard({ socket }, data) {\n  socket.current.emit(\"play_card\", data, (response) => {\n    if (response && response.error) {\n      console.log(response.error);\n      renderErrorPopup(response.error);\n    }\n  });\n}\n\nexport function playDiscard({ socket }, data) {\n  socket.current.emit(\"play_discard\", data, (response) => {\n    if (response && response.error) {\n      console.log(response.error);\n      renderErrorPopup(response.error);\n    }\n  });\n}\n","import React, { useContext } from \"react\";\nimport { PopupboxManager } from \"react-popupbox\";\nimport { Row, Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Popup from \"./PopUp\";\nimport { renderErrorPopup } from \"./ErrorPopup\";\nimport { NumUsersContext } from \"../UsersProvider\";\nimport { SessionContext } from \"../SessionProvider\";\nimport { GameContext } from \"../GameProvider\";\n\nimport { leaveGame } from \"../WebSockets\";\n\nexport default function StartGamePopup({ socket }) {\n  const history = useHistory();\n  const userContext = useContext(NumUsersContext);\n  const session = useContext(SessionContext);\n  const game = useContext(GameContext);\n  const total = 6;\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n\n    socket.current.emit(\"start_game\", (response) => {\n      if (response && response.error) {\n        renderErrorPopup(response.error);\n      } else {\n        PopupboxManager.close();\n        session.setOnMatch(true);\n        game.setIsPrivate(true);\n        history.push(\"/match\");\n      }\n    });\n  };\n  return (\n    <Popup\n      title=\"¿Empezar partida?\"\n      close={true}\n      onClose={() => leaveGame({ socket })}\n    >\n      <Row className=\"justify-content-center\">\n        <p className=\"h5 text-center mb-3\">\n          {userContext.users}/{total} gaticos preparados\n        </p>\n      </Row>\n      <Row className=\"justify-content-center\">\n        {userContext.users > 1 ? (\n          <Button className=\"primary-button\" onClick={handleClick}>\n            Empezar partida\n          </Button>\n        ) : (\n          <OverlayTrigger\n            placement=\"bottom\"\n            overlay={\n              <Tooltip id=\"tooltip-disabled\">\n                Se necesitan al menos dos jugadores para comenzar la partida\n              </Tooltip>\n            }\n          >\n            <Button className=\"primary-button\" disabled>\n              Empezar partida\n            </Button>\n          </OverlayTrigger>\n        )}\n      </Row>\n    </Popup>\n  );\n}\n\nexport function renderStartGamePopup({ socket }) {\n  const content = <StartGamePopup socket={socket} />;\n  PopupboxManager.open({\n    content,\n    config: {\n      fadeIn: true,\n      fadeInSpeed: 400,\n      escClose: false,\n      overlayClose: false,\n    },\n  });\n}\n","export default __webpack_public_path__ + \"static/media/tick.fcec503e.svg\";","export default __webpack_public_path__ + \"static/media/clipboard.b44fbd06.svg\";","import React from \"react\";\nimport { PopupboxManager } from \"react-popupbox\";\nimport { Row, Button, Image } from \"react-bootstrap\";\n\nimport Popup from \"./PopUp\";\nimport { renderStartGamePopup } from \"./StartGamePopup\";\nimport { leaveGame } from \"../WebSockets\";\n\nimport tick from \"../../assets/common/icons/tick.svg\";\nimport clipboard from \"../../assets/common/icons/clipboard.svg\";\n\nfunction copyCode() {\n  const codeField = document.getElementById(\"game-code\");\n  codeField.focus();\n  codeField.select();\n  document.execCommand(\"copy\");\n}\n\nexport default function CreateGamePopup({ socket, code }) {\n  return (\n    <Popup\n      title=\"Partida privada lista\"\n      icon={tick}\n      close={true}\n      onClose={() => {\n        leaveGame({ socket });\n      }}\n    >\n      <Row className=\"justify-content-center\">\n        <p className=\"text-center\">\n          Comparte el siguiente código con tus\n          <br />\n          amigos para empezar a jugar.\n        </p>\n      </Row>\n\n      <Row className=\"justify-content-center\">\n        <div className=\"input-group w-50 mr-2\">\n          <div className=\"input-group-prepend\">\n            <Button\n              className=\"primary-background btn-outline-primary\"\n              type=\"button\"\n              onClick={copyCode}\n            >\n              <Image src={clipboard} style={{ height: \"20px\" }} />\n            </Button>\n          </div>\n          <input\n            id=\"game-code\"\n            type=\"text\"\n            size=\"6\"\n            className=\"text-center form-control h-100\"\n            readOnly\n            value={code}\n            aria-label=\"Default\"\n            aria-describedby=\"inputGroup-sizing-default\"\n          />\n        </div>\n        <Button\n          className=\"primary-button\"\n          onClick={() => renderStartGamePopup({ socket })}\n        >\n          CONFIRMAR\n        </Button>\n      </Row>\n    </Popup>\n  );\n}\n\nexport function renderCreateGamePopup({ socket }) {\n  socket.current.emit(\"create_game\", callback);\n\n  socket.current.once(\"create_game\", (response) => {\n    const content = <CreateGamePopup socket={socket} code={response.code} />;\n    PopupboxManager.open({\n      content,\n      config: {\n        fadeIn: true,\n        fadeInSpeed: 400,\n        escClose: false,\n        overlayClose: false,\n      },\n    });\n  });\n\n  function callback(data) {\n    if (data && data.error) {\n      console.error(data.error);\n    }\n  }\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { PopupboxManager } from \"react-popupbox\";\nimport { Row } from \"react-bootstrap\";\n\nimport Popup from \"./PopUp\";\nimport { renderStartGamePopup } from \"./StartGamePopup\";\nimport { NumUsersContext } from \"../UsersProvider\";\nimport { SessionContext } from \"../SessionProvider\";\n\nimport { leaveGame } from \"../WebSockets\";\n\nexport default function PreparingPrivateGamePopup({ socket }) {\n  const userContext = useContext(NumUsersContext);\n  const session = useContext(SessionContext);\n  const total = 6;\n\n  useEffect(() => {\n    if (session.onMatch) {\n      PopupboxManager.close();\n    }\n\n    if (!socket || !socket.current) return;\n\n    socket.current.once(\"game_owner\", () => {\n      PopupboxManager.close();\n      renderStartGamePopup({ socket });\n    });\n  }, []);\n\n  return session.onMatch ? null : (\n    <Popup\n      title=\"Preparando partida...\"\n      close={true}\n      onClose={() => leaveGame({ socket })}\n    >\n      <Row className=\"justify-content-center mb-3 mt-3\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <p className=\"h5 text-center mb-3\">\n          {userContext.users}/{total} gaticos preparados\n        </p>\n      </Row>\n    </Popup>\n  );\n}\n\nexport function renderPreparingPrivateGamePopup({ socket }) {\n  const content = <PreparingPrivateGamePopup socket={socket} />;\n  PopupboxManager.open({\n    content,\n    config: {\n      fadeIn: true,\n      fadeInSpeed: 400,\n      escClose: false,\n      overlayClose: false,\n    },\n  });\n}\n","import React, { useState, useContext } from \"react\";\nimport { PopupboxManager } from \"react-popupbox\";\nimport { Row, Button, Form } from \"react-bootstrap\";\nimport { GameContext } from \"../GameProvider\";\n\nimport Popup from \"./PopUp\";\n\nimport { renderPreparingPrivateGamePopup } from \"./PreparingPrivateGamePopup\";\nimport { renderErrorPopup } from \"./ErrorPopup\";\n\nimport tick from \"../../assets/common/icons/tick.svg\";\n\nexport default function JoinPrivateGamePopup({ socket }) {\n  const [code, setCode] = useState(\"\");\n  const game = useContext(GameContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    socket.current.emit(\"join\", code, (response) => {\n      if (response && response.error) {\n        renderErrorPopup(response.error);\n      } else {\n        // Join new game\n        game.setIsPrivate(true);\n        PopupboxManager.close();\n        renderPreparingPrivateGamePopup({ socket });\n      }\n    });\n  };\n\n  return (\n    <Popup title=\"Unirse a partida\" icon={tick} close={true}>\n      <Row className=\"justify-content-center\">\n        <p className=\"text-center\">\n          Introduce el código de partida y <br />\n          comienza a jugar con tus amigos.\n        </p>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Form className=\"input-group\" onSubmit={handleSubmit}>\n          <input\n            id=\"game-code\"\n            type=\"text\"\n            size=\"6\"\n            minLength=\"4\"\n            maxLength=\"6\"\n            placeholder=\"Código\"\n            className=\"text-center form-control h-100 button-rouded\"\n            onChange={(e) => setCode(e.target.value)}\n          ></input>\n          <Button className=\"primary-button ml-2\" type=\"submit\">\n            CONFIRMAR\n          </Button>\n        </Form>\n      </Row>\n    </Popup>\n  );\n}\n\nexport function renderJoinPrivateGamePopup({ socket }) {\n  const content = <JoinPrivateGamePopup socket={socket} />;\n  PopupboxManager.open({\n    content,\n    config: {\n      fadeIn: true,\n      fadeInSpeed: 400,\n    },\n  });\n}\n","import React from \"react\";\nimport { PopupboxManager } from \"react-popupbox\";\nimport { Row } from \"react-bootstrap\";\n\nimport Popup from \"./PopUp\";\nimport { renderErrorPopup } from \"./ErrorPopup\";\nimport { stopSearchingGame } from \"../WebSockets\";\n\nconst curiosities = [\n  \"Los gatos tricolores siempre son hembras\",\n  \"Todos los gatos recién nacidos tienen los ojos azules.\",\n];\n\nexport default function JoinPublicGamePopup({ socket }) {\n  return (\n    <Popup\n      title=\"Preparando partida...\"\n      close={true}\n      onClose={() => stopSearchingGame({ socket })}\n    >\n      <Row className=\"justify-content-center mb-3 mt-3\">\n        <Row className=\"justify-content-center mb-3 mt-3\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </Row>\n      </Row>\n      <Row className=\"justify-content-center\">¿Lo sabías?</Row>\n      <Row className=\"justify-content-center\">{curiosities[0]}</Row>\n    </Popup>\n  );\n}\n\nexport function renderJoinPublicGamePopup(session, game) {\n  const socket = session.socket;\n\n  function callback(data) {\n    if (data && data.error) {\n      console.error(data.error);\n    }\n  }\n\n  if (!socket.current) {\n    renderErrorPopup(\"No hay conexión con el servidor, vuelva a intentarlo\");\n    return;\n  }\n  socket.current.emit(\"search_game\", callback);\n  // Listen to receive a game code\n  socket.current.once(\"found_game\", (response) => {\n    // Join public game with the given code\n    socket.current.emit(\"join\", response.code, callback);\n    game.setIsPrivate(false);\n  });\n\n  const content = <JoinPublicGamePopup socket={socket} />;\n  PopupboxManager.open({\n    content,\n    config: {\n      fadeIn: true,\n      fadeInSpeed: 400,\n      escClose: false,\n      overlayClose: false,\n    },\n  });\n}\n","const baseUrl = \"https://gatovid.herokuapp.com/data\";\n\nfunction serverRequest(path, requestOptions, setToken) {\n  return fetch(baseUrl + path, requestOptions)\n    .then((response) => {\n      if (!response.ok) {\n        throw response;\n      } else {\n        return response.json();\n      }\n    })\n    .catch((response) => {\n      switch (response.status) {\n        case 400:\n          console.log(\"Error 400\");\n          return response.json();\n        case 401:\n          console.log(\"Token caducado\");\n          // Token to null and return to login\n          setToken(null);\n          return null;\n        default:\n          console.log(\"Error:\" + response.status);\n          return null;\n      }\n    });\n}\n\nexport async function loginUser({ email, password, setToken }) {\n  let data = new URLSearchParams();\n  data.append(`email`, email);\n  data.append(`password`, password);\n\n  const requestOptions = {\n    method: \"POST\",\n    body: data,\n  };\n\n  const path = \"/login\";\n\n  return serverRequest(path, requestOptions, setToken);\n}\n\nexport async function logoutUser({ token, setToken }) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n    },\n  };\n  const path = \"/logout\";\n\n  return serverRequest(path, requestOptions, setToken);\n}\n\nexport async function signUpUser({ name, email, password, setToken }) {\n  let data = new URLSearchParams();\n  data.append(`name`, name);\n  data.append(`email`, email);\n  data.append(`password`, password);\n\n  const requestOptions = {\n    method: \"POST\",\n    body: data,\n  };\n\n  const path = \"/signup\";\n\n  return serverRequest(path, requestOptions, setToken);\n}\n\nexport async function deleteUser({ token, setToken }) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n    },\n  };\n\n  const path = \"/remove_user\";\n\n  return serverRequest(path, requestOptions, setToken);\n}\n\nexport async function getUserData({ token, setToken }) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { Authorization: \"Bearer \" + token },\n  };\n\n  const path = \"/user_data\";\n\n  return serverRequest(path, requestOptions, setToken);\n}\n\nexport async function modifyUser({ token, data, setToken }) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { Authorization: \"Bearer \" + token },\n    body: data,\n  };\n\n  const path = \"/modify_user\";\n\n  return serverRequest(path, requestOptions, setToken);\n}\n\nexport async function getUserStats({ username, setToken }) {\n  let data = new URLSearchParams();\n  data.append(`name`, username);\n\n  const requestOptions = {\n    method: \"POST\",\n    body: data,\n  };\n\n  const path = \"/user_stats\";\n\n  return serverRequest(path, requestOptions, setToken);\n}\n\nexport async function shopBuy({ token, data, setToken }) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { Authorization: \"Bearer \" + token },\n    body: data,\n  };\n\n  const path = \"/shop_buy\";\n\n  return serverRequest(path, requestOptions, setToken);\n}\n","export default __webpack_public_path__ + \"static/media/logo.d02df92d.svg\";","export default __webpack_public_path__ + \"static/media/tienda.c7cce8c4.svg\";","export default __webpack_public_path__ + \"static/media/huella.a67d1042.svg\";","export default __webpack_public_path__ + \"static/media/help.6e4679ab.svg\";","import cards from \"../assets/common/cards.json\";\nimport profile_pics from \"../assets/common/profile_pics.json\";\nimport boards from \"../assets/common/boards.json\";\n\nfunction searchCard(elem, card) {\n  if (card.color) {\n    return elem.type == card.card_type && elem.color == card.color;\n  } else {\n    return (\n      elem.type == card.card_type && elem.treatment_type == card.treatment_type\n    );\n  }\n}\n\n// Create card url\nexport function getCard(card) {\n  let carta = cards.find((elem) => searchCard(elem, card));\n  return process.env.PUBLIC_URL + \"/\" + carta.image;\n}\n\n// Create profile url and avatar url\nexport function getProfile(photo) {\n  return process.env.PUBLIC_URL + \"/\" + profile_pics[photo].image;\n}\n\n// Create board url\nexport function getBoard(board) {\n  return [\n    process.env.PUBLIC_URL + \"/\" + boards[board].image,\n    boards[board].cost,\n    boards[board].name,\n  ];\n}\n\n// Create avatar url\nexport function getAvatar(avatar) {\n  return [\n    process.env.PUBLIC_URL + \"/\" + profile_pics[avatar].image,\n    profile_pics[avatar].cost,\n    profile_pics[avatar].name,\n  ];\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { PopupboxManager } from \"react-popupbox\";\n\nimport { Container, Row, Col, Button, Image } from \"react-bootstrap\";\n\nimport { renderCreateGamePopup } from \"./popups/CreateGamePopup\";\nimport { renderJoinPrivateGamePopup } from \"./popups/JoinPrivateGamePopup\";\nimport { renderJoinPublicGamePopup } from \"./popups/JoinPublicGamePopup\";\nimport { renderErrorPopup } from \"./popups/ErrorPopup\";\nimport { getUserData } from \"../utils/api\";\n\nimport logo from \"../assets/common/logo/logo.svg\";\nimport shop from \"../assets/common/icons/tienda.svg\";\nimport coins from \"../assets/common/icons/huella.svg\";\nimport help from \"../assets/common/icons/help.svg\";\n\nimport { getProfile } from \"../utils/json\";\n\nimport { SessionContext } from \"./SessionProvider\";\nimport { GameContext } from \"./GameProvider\";\n\nfunction Menu() {\n  const session = useContext(SessionContext);\n  const game = useContext(GameContext);\n  const history = useHistory();\n  const [picture, setPicture] = useState(\"\");\n  const [numCoins, setNumCoins] = useState(0);\n\n  useEffect(() => {\n    session.setOnMatch(false);\n    // Update del socket\n    // F: Así se consigue que se limpien los datos del gameProvider\n    session.setUpdateSocket((session.updateSocket + 1) % 2);\n  }, []);\n\n  useEffect(() => {\n    if (session.userData.length === 0) return;\n\n    const pictureURL = getProfile(session.userData.picture);\n    setPicture(pictureURL);\n    setNumCoins(session.userData.coins);\n  }, [session.userData.picture, session.userData.coins]);\n\n  useEffect(() => {\n    getUserData(session).then((response) => {\n      if (response != null) {\n        if (\"error\" in response) {\n          console.error(response.error);\n        } else {\n          session.setUserData({\n            email: response.email,\n            name: response.name,\n            coins: response.coins,\n            picture: response.picture,\n            board: response.board,\n            purchases: response.purchases,\n          });\n        }\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!session.socket || !session.socket.current) return;\n    session.socket.current.once(\"start_game\", (response) => {\n      if (response && response.error) {\n        renderErrorPopup(response.error);\n      } else {\n        PopupboxManager.close();\n        session.setOnMatch(true);\n        history.push(\"/match\");\n        session.socket.current.off(\"game_owner\");\n      }\n    });\n\n    session.socket.current.once(\"game_cancelled\", () => {\n      PopupboxManager.close();\n    });\n  }, [session.socketChange]);\n\n  return (\n    <Container\n      id=\"menu\"\n      className=\"app-container col-centered justify-content-around\"\n    >\n      <Row className=\"justify-content-between menu-icons\">\n        <Col className=\"h-100\">\n          <Link to=\"/profile\" className=\"d-block h-100\">\n            <Image\n              src={picture}\n              alt=\"Perfil\"\n              className=\"menu-icon user-profile-image\"\n              roundedCircle\n            />\n          </Link>\n        </Col>\n        <Col className=\"h-100\">\n          <Link to=\"/shop\" className=\"d-block h-100 url-style-disabled\">\n            <Row className=\"justify-content-end h-100\">\n              <div className=\"menu-icon\">\n                <Col className=\"h-100\">\n                  <Row className=\"h-100\">\n                    <Image src={shop} alt=\"Tienda\" className=\"h-100\" />\n                  </Row>\n                  <Row className=\"coins justify-content-center align-items-center\">\n                    <span className=\"mr-2\">{numCoins}</span>\n                    <Image src={coins} alt=\"Tienda\" />\n                  </Row>\n                </Col>\n              </div>\n            </Row>\n          </Link>\n        </Col>\n      </Row>\n      <Row className=\"logo-row justify-content-center align-items-center\">\n        <Image\n          id=\"logo\"\n          className=\"menu-logo img-fluid\"\n          src={logo}\n          alt=\"logo\"\n        />\n        <h1 className=\"logo-title ml-4\">GATOVID</h1>\n      </Row>\n      <Row className=\"align-items-center\">\n        <Col lg={true}>\n          <Button\n            className=\"primary-button d-block mx-auto m-2\"\n            onClick={() => renderCreateGamePopup(session)}\n          >\n            CREAR PARTIDA PRIVADA\n          </Button>\n        </Col>\n        <Col lg={true}>\n          <Button\n            className=\"primary-button d-block mx-auto m-2\"\n            onClick={() => renderJoinPrivateGamePopup(session)}\n          >\n            UNIRSE PARTIDA PRIVADA\n          </Button>\n        </Col>\n        <Col lg={true}>\n          <Button\n            className=\"primary-button d-block mx-auto m-2\"\n            onClick={() => renderJoinPublicGamePopup(session, game, history)}\n          >\n            UNIRSE PARTIDA PÚBLICA\n          </Button>\n        </Col>\n      </Row>\n      <Link to=\"/help\">\n        <Image src={help} className=\"game-icon pause-menu\" />\n      </Link>\n    </Container>\n  );\n}\n\nexport default Menu;\n","import React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\nfunction Message({ username, message }) {\n  if (username == message.userid) {\n    return (\n      <ListGroup.Item className=\"own-message mt-1 mb-2 align-self-end\">\n        {message.text}\n      </ListGroup.Item>\n    );\n  } else if (\"[GATOVID]\" == message.userid) {\n    return (\n      <ListGroup.Item className=\"gatovid-message mt-1 mb-2 align-self-center\">\n        {message.text}\n      </ListGroup.Item>\n    );\n  } else {\n    return (\n      <ListGroup.Item className=\"message mt-1 mb-2\">\n        <strong>{message.userid}:</strong> {message.text}\n      </ListGroup.Item>\n    );\n  }\n}\n\nexport default Message;\n","import React, { useRef, useEffect } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\nimport Message from \"./Message\";\n\nfunction MessageList({ username, messages }) {\n  // TODO: Se inicializa a algo para ver el scroll\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  // useEffect se ejecuta / se dispara cuando ocurre un cambio en messages\n  // (condición/guarda entre []), al hacerlo ejecuta la f. scrollToBottom\n  useEffect(scrollToBottom, [messages]);\n\n  return (\n    <ListGroup className=\"w-100\">\n      {messages.map((msg, idx) => (\n        <Message key={idx} username={username} message={msg} />\n      ))}\n      <div ref={messagesEndRef} />\n    </ListGroup>\n  );\n}\n\nexport default MessageList;\n","export default __webpack_public_path__ + \"static/media/send.aacd15f1.svg\";","import React, { useState, useContext } from \"react\";\nimport { Button, Image, Container, Row, Form } from \"react-bootstrap\";\n\nimport MessageList from \"./MessageList\";\n\nimport send from \"../assets/common/icons/send.svg\";\n\nimport { SessionContext } from \"./SessionProvider\";\nimport { GameContext } from \"./GameProvider\";\n\nfunction Chat() {\n  const session = useContext(SessionContext);\n  const game = useContext(GameContext);\n  const [message, setMessage] = useState(\"\");\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (message) {\n      session.socket.current.emit(\"chat\", message, callback);\n    }\n    setMessage(\"\");\n  };\n\n  function callback(data) {\n    if (data && data.error) {\n      console.error(data.error);\n    }\n  }\n\n  return (\n    <Container className=\"chat-container\">\n      <Row className=\"chat-header justify-content-center align-items-center\">\n        <h4>Chat de partida</h4>\n      </Row>\n      <Row className=\"message-list px-3\">\n        <MessageList\n          username={session.userData.name}\n          messages={game.messages}\n        />\n      </Row>\n      <Form className=\"send-message input-group mt-2\" onSubmit={sendMessage}>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          maxLength=\"240\"\n          value={message}\n          placeholder=\"Escribir Mensaje\"\n          onChange={(e) => setMessage(e.target.value)}\n        ></input>\n        <div className=\"input-group-append pb-2\">\n          <Button className=\"send-button\" type=\"submit\">\n            <Image src={send} style={{ height: \"20px\" }} />\n          </Button>\n        </div>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Chat;\n","import React from \"react\";\nimport { Card as CardBs, Image } from \"react-bootstrap\";\n\nimport { getCard } from \"../../utils/json\";\n\n/**\n * @param  type Three types: hand, body, rival\n */\nfunction Card({ id, card, slot, kind, className }) {\n  let cardImg;\n\n  if (card != null) {\n    cardImg = getCard(card);\n  }\n\n  const drag = (e) => {\n    // Only allow to move hand cards\n    if (slot == 0 || slot == 1 || slot == 2) {\n      e.dataTransfer.setData(\"slot\", slot);\n      e.dataTransfer.setData(\"treatment_type\", card.treatment_type);\n    }\n  };\n\n  return card != null ? (\n    <CardBs\n      id={id}\n      className={`game-card mx-1 bg-dark ${className}`}\n      onDragStart={drag}\n    >\n      <Image id={`${id}-img`} className={`${kind}-card`} src={cardImg} />\n    </CardBs>\n  ) : (\n    <CardBs\n      id={id}\n      className={`game-card mx-1 bg-transparent border-secondary ${kind}-card`}\n      onDragStart={drag}\n    />\n  );\n}\n\nexport default Card;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\nimport Card from \"./Card\";\nimport { GameContext } from \"../GameProvider\";\n\nfunction Hand() {\n  const game = useContext(GameContext);\n  const [hand, setHand] = useState([]);\n\n  useEffect(() => {\n    setHand(game.hand);\n  }, [game.hand]);\n\n  return (\n    <ListGroup horizontal style={{ minHeight: \"14vh\" }}>\n      {hand.map((card, idx) => (\n        <Card key={idx} slot={idx} card={card} kind=\"hand\" />\n      ))}\n    </ListGroup>\n  );\n}\n\nexport default Hand;\n","import React, { useContext } from \"react\";\n\nimport Card from \"./Card\";\nimport { playCard } from \"../WebSockets\";\n\nimport { SessionContext } from \"../SessionProvider\";\nimport { GameContext } from \"../GameProvider\";\n\nfunction CardStack({ id, cards, kind, organ_pile, username }) {\n  const session = useContext(SessionContext);\n  const { transplantData, setTransplantData } = useContext(GameContext);\n\n  const drop = (e) => {\n    e.preventDefault();\n\n    // Obtain card_id of card in event e\n    let slot = e.dataTransfer.getData(\"slot\");\n    if (!slot) {\n      return;\n    }\n    slot = parseInt(slot);\n    const treatment_type = e.dataTransfer.getData(\"treatment_type\");\n\n    let data = {\n      slot: slot,\n    };\n\n    if (treatment_type == \"undefined\") {\n      // Organ, virus, medicine\n      data[\"organ_pile\"] = organ_pile;\n      data[\"target\"] = username;\n    } else if (treatment_type == \"transplant\") {\n      // Check for previous transplant data\n      if (transplantData[\"target1\"] == undefined) {\n        // No previous data -> first player on transplant\n        let aux = {};\n        aux[\"target1\"] = username;\n        aux[\"organ_pile1\"] = organ_pile;\n        setTransplantData(aux);\n        // No play_card\n        return;\n      } else {\n        // Previous player -> second player on transplant\n        data[\"target1\"] = transplantData[\"target1\"];\n        data[\"organ_pile1\"] = transplantData[\"organ_pile1\"];\n        data[\"target2\"] = username;\n        data[\"organ_pile2\"] = organ_pile;\n      }\n    } else if (treatment_type == \"organ_thief\") {\n      data[\"target\"] = username;\n      data[\"organ_pile\"] = organ_pile;\n    } else if (treatment_type == \"medical_error\") {\n      data[\"target\"] = username;\n    }\n\n    playCard(session, data);\n    setTransplantData({});\n  };\n\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div\n      id={id}\n      className={`stack-base-${kind}`}\n      onDrop={drop}\n      onDragOver={allowDrop}\n    >\n      {cards.map((card, idx) => (\n        <Card\n          key={idx}\n          id={`${id}-card-${idx}`}\n          className={`stack-card-${kind} stack-card-${kind}-${idx}`}\n          card={card}\n          kind={kind}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default CardStack;\n","import React from \"react\";\n\nimport CardStack from \"./CardStack\";\n\n/**\n * @param cardStacks -> lista de las pilas de cartas posibles en el cuerpo\n * Entre 0 y 4 pilas\n */\nfunction Body({ cardStacks, kind = \"body\", username }) {\n  let newBody = [[], [], [], []];\n  if (!cardStacks) {\n    newBody = [[null], [null], [null], [null]];\n  } else {\n    // Transform to cardStack format\n    cardStacks.map((stack, ind) => {\n      // Treat modifiers as single cards over first card\n      let newStack = [];\n      newStack = [...newStack, stack.organ];\n      stack.modifiers.map((modifier) => {\n        newStack = [...newStack, modifier];\n      });\n      // Update stack with index ind\n      newBody[ind] = newStack;\n    });\n  }\n\n  return (\n    <div className=\"row mx-0 flex-nowrap\" id={`user-${kind}`}>\n      {newBody.map((cards, idx) => (\n        <CardStack\n          id={`${kind}-stack-${idx}`}\n          key={idx}\n          cards={cards}\n          kind={kind}\n          organ_pile={idx}\n          username={username}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Body;\n","import React, { useContext } from \"react\";\nimport { Row, Card, Image } from \"react-bootstrap\";\n\nimport { getProfile } from \"../../utils/json\";\n\nimport Body from \"./Body\";\n\nimport { GameContext } from \"../GameProvider\";\n\nfunction PlayerBox({ username, display_name, photo, body }) {\n  const { currentTurn } = useContext(GameContext);\n\n  let isTurn = currentTurn == username;\n  let profile = getProfile(photo);\n\n  return (\n    <Card className={\"player-box p-1 py-2 m-3 \" + (isTurn && \"player-turn\")}>\n      <Card.Body className=\"player-body p-0\">\n        <Card.Title>\n          <Row className=\"mx-0 justify-content-center flex-nowrap\">\n            <Image\n              className=\"player-image mr-4 border border-dark\"\n              src={profile}\n              roundedCircle\n            />\n            <h4 className=\"align-self-center my-0\">{display_name} </h4>\n          </Row>\n        </Card.Title>\n        <Row className=\"justify-content-center mx-1gi\">\n          <Body cardStacks={body} kind=\"rival\" username={username} />\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default PlayerBox;\n","export default __webpack_public_path__ + \"static/media/fuegos-artificiales.bb8b7435.png\";","import React, { useContext, useEffect, useState } from \"react\";\nimport { Container, Row, Button, Image } from \"react-bootstrap\";\n\nimport Hand from \"./game/Hand\";\nimport Body from \"./game/Body\";\nimport PlayerBox from \"./game/PlayerBox\";\nimport { renderErrorPopup } from \"./popups/ErrorPopup\";\n\nimport { playDiscard } from \"./WebSockets\";\nimport { GameContext } from \"./GameProvider\";\nimport { SessionContext } from \"./SessionProvider\";\n\nimport fuegos from \"../assets/common/icons/fuegos-artificiales.png\";\n\nfunction Board() {\n  const session = useContext(SessionContext);\n  const { players, bodies, currentTurn, ownFinished, isFinished } = useContext(\n    GameContext\n  );\n\n  const [numRivals, setNumRivals] = useState(0);\n  const [gamePlayers, setGamePlayers] = useState(players);\n\n  useEffect(() => {\n    if (players.length > 0) {\n      setNumRivals(players.length);\n      setGamePlayers(players);\n    }\n    return () => {\n      setNumRivals(0);\n    };\n  }, [players]);\n\n  const Player1 = () => {\n    let index = 2;\n    return numRivals == 5 || numRivals == 6 ? (\n      <PlayerBox\n        username={gamePlayers[index].name}\n        display_name={gamePlayers[index].display_name}\n        photo={gamePlayers[index].picture}\n        body={bodies[gamePlayers[index].name]}\n      />\n    ) : null;\n  };\n\n  const Player2 = () => {\n    let index = 1;\n    return numRivals > 2 ? (\n      <PlayerBox\n        username={gamePlayers[index].name}\n        display_name={gamePlayers[index].display_name}\n        photo={gamePlayers[index].picture}\n        body={bodies[gamePlayers[index].name]}\n      />\n    ) : null;\n  };\n\n  const Player3 = () => {\n    let index = -1;\n    if (numRivals == 2) index = 1;\n    else if (numRivals == 4) index = 2;\n    else if (numRivals == 6) index = 3;\n    return index != -1 ? (\n      <PlayerBox\n        username={gamePlayers[index].name}\n        display_name={gamePlayers[index].display_name}\n        photo={gamePlayers[index].picture}\n        body={bodies[gamePlayers[index].name]}\n      />\n    ) : null;\n  };\n\n  const Player4 = () => {\n    let index = -1;\n    if (numRivals == 3) index = 2;\n    else if (numRivals == 4 || numRivals == 5) index = 3;\n    else if (numRivals == 6) index = 4;\n    return index != -1 ? (\n      <PlayerBox\n        username={gamePlayers[index].name}\n        display_name={gamePlayers[index].display_name}\n        photo={gamePlayers[index].picture}\n        body={bodies[gamePlayers[index].name]}\n      />\n    ) : null;\n  };\n\n  const Player5 = () => {\n    let index = -1;\n    if (numRivals == 5) index = 4;\n    else if (numRivals == 6) index = 5;\n    return index != -1 ? (\n      <PlayerBox\n        username={gamePlayers[index].name}\n        display_name={gamePlayers[index].display_name}\n        photo={gamePlayers[index].picture}\n        body={bodies[gamePlayers[index].name]}\n      />\n    ) : null;\n  };\n\n  const playPass = async (e) => {\n    e.preventDefault();\n    session.socket.current.emit(\"play_pass\", (data) => {\n      if (data && data.error) {\n        renderErrorPopup(data.error);\n      }\n    });\n  };\n\n  const drop = (e) => {\n    e.preventDefault();\n\n    // Obtain card_id of card in event e\n    let slot = e.dataTransfer.getData(\"slot\");\n    if (!slot) {\n      return;\n    }\n    slot = parseInt(slot);\n    let data = slot;\n    playDiscard(session, data);\n  };\n\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Container className=\" d-flex flex-column mx-0 p-0\">\n      <Row className=\"justify-content-around flex-grow-1\">\n        <Player2 />\n        <Player1 />\n        <Player3 />\n        <Player4 />\n        <Player5 />\n      </Row>\n      <Row className=\"justify-content-around\">\n        {currentTurn == session.userData.name && !isFinished ? (\n          <Button className=\"pass-button-unlocked\" onClick={playPass}>\n            PASAR\n          </Button>\n        ) : (\n          <Button className=\"pass-button-locked\">PASAR</Button>\n        )}\n        {ownFinished || isFinished ? (\n          <div>\n            <Row>\n              <h4>¡HAS TERMINADO!</h4>\n            </Row>\n            <Row className=\"align-items-center justify-content-center\">\n              <Image style={{ height: \"80px\", width: \"80px\" }} src={fuegos} />\n            </Row>\n          </div>\n        ) : (\n          <Body\n            cardStacks={bodies[session.userData.name]}\n            username={session.userData.name}\n          />\n        )}\n        <div className=\"discard-base\" onDrop={drop} onDragOver={allowDrop}>\n          <h5 className=\"mt-4\">DESCARTAR</h5>\n        </div>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Hand />\n      </Row>\n    </Container>\n  );\n}\n\nexport default Board;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nimport { SessionContext } from \"./SessionProvider\";\nimport { GameContext } from \"./GameProvider\";\n\nconst renderTime = ({ remainingTime }, isTurn) => {\n  return isTurn ? (\n    <div className=\"text-center\">\n      <div className=\"time\">{remainingTime} </div>\n    </div>\n  ) : (\n    <div className=\"text-center\">\n      <strong style={{ fontSize: \"14px\" }}>ESPERA</strong>\n    </div>\n  );\n};\n\nfunction Timer() {\n  const { userData } = useContext(SessionContext);\n  const {\n    isPaused,\n    currentTurn,\n    changeTurn,\n    isFinished,\n    remTurnTime,\n  } = useContext(GameContext);\n  const [isPlaying, setIsPlaying] = useState(true);\n\n  useEffect(() => {\n    setIsPlaying(!isPaused);\n  }, [isPaused]);\n\n  let isTurn = currentTurn == userData.name;\n  return isFinished ? null : (\n    <Row className=\"justify-content-center mb-2\">\n      <CountdownCircleTimer\n        key={changeTurn}\n        isPlaying={currentTurn == userData.name ? isPlaying : false}\n        duration={remTurnTime}\n        colors={\n          currentTurn == userData.name\n            ? [[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]\n            : [[\"#7A7A7A\"]]\n        }\n        size={80}\n        strokeWidth={8}\n        onComplete={() => [true, 1000]}\n      >\n        {({ remainingTime }) => renderTime({ remainingTime }, isTurn)}\n      </CountdownCircleTimer>\n    </Row>\n  );\n}\n\nexport default Timer;\n","export default __webpack_public_path__ + \"static/media/pause.a79fd61b.svg\";","import React, { useEffect, useContext } from \"react\";\nimport { PopupboxManager } from \"react-popupbox\";\nimport { Button } from \"react-bootstrap\";\n\nimport Popup from \"./PopUp\";\nimport { renderErrorPopup } from \"./ErrorPopup\";\n\nimport { SessionContext } from \"../SessionProvider\";\nimport { GameContext } from \"../GameProvider\";\n\nimport pauseIcon from \"../../assets/common/icons/pause.svg\";\n\nexport default function PausePopup() {\n  const { socket, userData } = useContext(SessionContext);\n  const { isPaused, pausedBy } = useContext(GameContext);\n\n  const restartGame = async (e) => {\n    e.preventDefault();\n    socket.current.emit(\"pause_game\", false, (data) => {\n      if (data && data.error) {\n        renderErrorPopup(data.error);\n      }\n    });\n  };\n\n  useEffect(() => {\n    //- Termina la pausa\n    if (!isPaused) {\n      PopupboxManager.close();\n    }\n  }, [isPaused]);\n\n  return (\n    <Popup title=\"Partida pausada\" icon={pauseIcon}>\n      {pausedBy == userData.name ? (\n        <p className=\"text-center\">\n          Se ha pausado la partida, los gaticos <br />\n          están esperando...\n        </p>\n      ) : (\n        <p className=\"text-center\">\n          El gatico <strong>{pausedBy}</strong> ha parado la partida\n        </p>\n      )}\n      {pausedBy == userData.name && (\n        <Button\n          className=\"primary-button\"\n          onClick={restartGame}\n          style={{ width: \"100%\" }}\n        >\n          Reanudar Partida\n        </Button>\n      )}\n    </Popup>\n  );\n}\n\nexport function renderPausePopup() {\n  const content = <PausePopup />;\n  PopupboxManager.open({\n    content,\n    config: {\n      fadeIn: true,\n      fadeInSpeed: 200,\n      escClose: false,\n      overlayClose: false,\n    },\n  });\n}\n","export default __webpack_public_path__ + \"static/media/medalla-oro.5b79fcaf.svg\";","export default __webpack_public_path__ + \"static/media/medalla-plata.94f0006e.svg\";","export default __webpack_public_path__ + \"static/media/medalla-bronce.0140d7e1.svg\";","export default __webpack_public_path__ + \"static/media/diploma.a4db6688.svg\";","import React, { useContext } from \"react\";\nimport { PopupboxManager } from \"react-popupbox\";\nimport { Row, Button, Image } from \"react-bootstrap\";\n\nimport oro from \"../../assets/common/icons/medalla-oro.svg\";\nimport plata from \"../../assets/common/icons/medalla-plata.svg\";\nimport bronce from \"../../assets/common/icons/medalla-bronce.svg\";\nimport diploma from \"../../assets/common/icons/diploma.svg\";\nimport dinero from \"../../assets/common/icons/huella.svg\";\n\nimport Popup from \"./PopUp\";\n\nimport { GameContext } from \"../GameProvider\";\n\nexport default function LeaderboardPopup() {\n  const { leaderboard } = useContext(GameContext);\n\n  // Ordena los jugadores por posición\n  let players = Object.keys(leaderboard).sort(\n    (player1, player2) =>\n      leaderboard[player1].position - leaderboard[player2].position\n  );\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    PopupboxManager.close();\n  };\n\n  return (\n    <Popup title=\"Resultados\" close={false}>\n      {players.map((player, idx) => {\n        let position = leaderboard[player].position;\n        let coins = leaderboard[player].coins;\n\n        return (\n          <Row\n            key={idx}\n            className=\"justify-content-between align-items-center my-2 coins\"\n          >\n            <Image\n              src={\n                position == 1\n                  ? oro\n                  : position == 2\n                  ? plata\n                  : position == 3\n                  ? bronce\n                  : diploma\n              }\n              style={{ height: \"30px\" }}\n            />\n            <h5 className=\"font-weight-bold mx-3 my-0\">{player}</h5>\n            <h5 className=\"font-weight-bold my-0\">\n              {coins}\n              <Image className=\"ml-2\" src={dinero} />\n            </h5>\n          </Row>\n        );\n      })}\n      <Row>\n        <Button className=\"primary-button w-100 mt-2\" onClick={handleClick}>\n          Cerrar\n        </Button>\n      </Row>\n    </Popup>\n  );\n}\n\nexport function renderLeaderboardPopup({ socket }) {\n  const content = <LeaderboardPopup socket={socket} />;\n  PopupboxManager.open({\n    content,\n    config: {\n      fadeIn: true,\n      fadeInSpeed: 400,\n      escClose: false,\n      overlayClose: false,\n    },\n  });\n}\n","import React, { useContext } from \"react\";\nimport { Row, Button } from \"react-bootstrap\";\nimport { PopupboxManager } from \"react-popupbox\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Popup from \"./PopUp\";\n\nimport { SessionContext } from \"../SessionProvider\";\n\nexport default function LeaveGamePopup({ isPrivate }) {\n  const { socket, updateSocket, setUpdateSocket } = useContext(SessionContext);\n\n  const history = useHistory();\n\n  const leaveGame = (e) => {\n    e.preventDefault();\n    socket.current.emit(\"leave\", (data) => {\n      if (data && data.error) {\n        console.error(data.error);\n      } else {\n        // When leaving, change updateSocket to get a new socket\n        PopupboxManager.close();\n        setUpdateSocket((updateSocket + 1) % 2);\n        history.push(\"/home\");\n      }\n    });\n  };\n\n  const exitGame = (e) => {\n    e.preventDefault();\n    PopupboxManager.close();\n    setUpdateSocket((updateSocket + 1) % 2);\n    history.push(\"/home\");\n  };\n\n  return (\n    <Popup title=\"¿Quieres salir?\" close={true}>\n      <Row>\n        <Button className=\"alert-button w-100 mt-3\" onClick={leaveGame}>\n          Abandonar partida\n        </Button>\n      </Row>\n      {isPrivate && (\n        <Row>\n          <Button className=\"primary-button w-100 my-3\" onClick={exitGame}>\n            Salir y reanudar más tarde\n          </Button>\n        </Row>\n      )}\n    </Popup>\n  );\n}\n\nexport function renderLeaveGamePopup(isPrivate) {\n  const content = <LeaveGamePopup isPrivate={isPrivate} />;\n  PopupboxManager.open({\n    content,\n    config: {\n      fadeIn: true,\n      fadeInSpeed: 400,\n      fadeOut: true,\n      fadeOutSpeed: 50,\n      escClose: false,\n      overlayClose: false,\n    },\n  });\n}\n","export default __webpack_public_path__ + \"static/media/cuerpo_cerebro.ac6d3c10.png\";","export default __webpack_public_path__ + \"static/media/cuerpo_corazon.db5c1244.png\";","export default __webpack_public_path__ + \"static/media/cuerpo_estomago.f1f36dd8.png\";","export default __webpack_public_path__ + \"static/media/cuerpo_hueso.60d0950c.png\";","export default __webpack_public_path__ + \"static/media/cuerpo_full.42b3bf11.png\";","export default __webpack_public_path__ + \"static/media/virus_a.07369b3c.png\";","export default __webpack_public_path__ + \"static/media/virus_b.a0718069.png\";","export default __webpack_public_path__ + \"static/media/virus_c.a2099808.png\";","export default __webpack_public_path__ + \"static/media/virus_d.dbe4ace0.png\";","export default __webpack_public_path__ + \"static/media/virus_e.0b5120e1.png\";","export default __webpack_public_path__ + \"static/media/medicina_jarabe.951c3212.png\";","export default __webpack_public_path__ + \"static/media/medicina_jeringuilla.7b80d3be.png\";","export default __webpack_public_path__ + \"static/media/medicina_medikit.65642ac5.png\";","export default __webpack_public_path__ + \"static/media/medicina_pastis.c794e2bd.png\";","export default __webpack_public_path__ + \"static/media/medicina_tiritas.07849fa0.png\";","export default __webpack_public_path__ + \"static/media/especial_operacion.29e824de.png\";","export default __webpack_public_path__ + \"static/media/especial_robaorganos.333da44d.png\";","export default __webpack_public_path__ + \"static/media/especial_tos.64ce0a94.png\";","export default __webpack_public_path__ + \"static/media/especial_guantes.a2f353e2.png\";","export default __webpack_public_path__ + \"static/media/especial_radiografia.c7604d9a.png\";","import React from \"react\";\nimport { Button, Col, Row, Card } from \"react-bootstrap\";\nimport { PopupboxManager } from \"react-popupbox\";\n\nimport organ1 from \"../../assets/common/cards/cuerpo_cerebro.png\";\nimport organ2 from \"../../assets/common/cards/cuerpo_corazon.png\";\nimport organ3 from \"../../assets/common/cards/cuerpo_estomago.png\";\nimport organ4 from \"../../assets/common/cards/cuerpo_hueso.png\";\nimport organ5 from \"../../assets/common/cards/cuerpo_full.png\";\n\nimport virus1 from \"../../assets/common/cards/virus_a.png\";\nimport virus2 from \"../../assets/common/cards/virus_b.png\";\nimport virus3 from \"../../assets/common/cards/virus_c.png\";\nimport virus4 from \"../../assets/common/cards/virus_d.png\";\nimport virus5 from \"../../assets/common/cards/virus_e.png\";\n\nimport medicina3 from \"../../assets/common/cards/medicina_jarabe.png\";\nimport medicina2 from \"../../assets/common/cards/medicina_jeringuilla.png\";\nimport medicina5 from \"../../assets/common/cards/medicina_medikit.png\";\nimport medicina1 from \"../../assets/common/cards/medicina_pastis.png\";\nimport medicina4 from \"../../assets/common/cards/medicina_tiritas.png\";\n\nimport tratamiento1 from \"../../assets/common/cards/especial_operacion.png\";\nimport tratamiento2 from \"../../assets/common/cards/especial_robaorganos.png\";\nimport tratamiento3 from \"../../assets/common/cards/especial_tos.png\";\nimport tratamiento4 from \"../../assets/common/cards/especial_guantes.png\";\nimport tratamiento5 from \"../../assets/common/cards/especial_radiografia.png\";\n\nfunction HelpPopup() {\n  return (\n    <Row className=\" help-popup justify-content-center align-items-center mt-4 ml-2 mr-2\">\n      <Col>\n        <Card className=\"card-help-popup p-0\">\n          <Button className=\"close card-close\" onClick={PopupboxManager.close}>\n            &times;\n          </Button>\n          <Card.Title>\n            <p className=\"primary-title text-center\">AYUDA</p>\n          </Card.Title>\n          <Card.Title className=\"mt-4\">\n            <p className=\"secondary-title text-center\">\n              Estructura del tablero\n            </p>\n          </Card.Title>\n          <Card.Text className=\"mt-4 text-justify\">\n            En la parte más inferior aparece tu mano, es decir, las cartas que\n            tienes en todo momento para poder jugar.\n            <br />\n            <br />\n            En mitad de pantalla aparecen 3 componentes: <br />\n            ● Un botón con el que puedes pasar el turno <br />\n            ● El cronómetro, que cuando sea tu turno se activará y podrás ver el\n            tiempo de juego restante en tu turno.\n            <br />\n            ● Un cuadro al que puedes descartar cartas de tu mano. <br />\n            <br />\n            Entre estos componentes y tu mano, se encuentra el espacio para ir\n            colocando las cartas de tu cuerpo. Entre los botones superiores y\n            los componentes mencionados se encuentran los cuerpos de tus\n            oponentes. Puedes colocar en tu turno cartas sobre estos cuerpos.\n          </Card.Text>\n          <Card.Title className=\"mt-4\">\n            <p className=\"secondary-title text-center\">Objetivo del juego</p>\n          </Card.Title>\n          <Card.Text className=\"mt-4 text-justify\">\n            Sé el primer jugador en completar tu cuerpo. Un cuerpo lo forman 4\n            órganos, uno de cada color. Si logras reunir sobre la mesa, frente a\n            ti, tus 4 órganos diferentes sanos, ¡habrás ganado la partida!.\n          </Card.Text>\n          <Card.Title className=\"mt-4\">\n            <p className=\"secondary-title text-center\">Mecánica del juego</p>\n          </Card.Title>\n          <Card.Text className=\"mt-4 text-justify\">\n            Cada jugador debe tener siempre al comienzo de su turno 3 cartas en\n            su mano y tan solo podrá realizar una acción por turno. Después de\n            haber actuado, recibirá cartas del mazo para volver a tener su mano\n            completa. Juega los distintos tipos de carta, colocándolas en el\n            espacio del cuerpo para construirlo, o sobre las cartas de tus\n            rivales para evitar que estos lo logren antes que tú.\n            <br />\n            <br />\n            Algunas cartas pueden obligarte a descartar o cambiar tus órganos,\n            tus vacunas o incluso tu mano. Elabora tu estrategia para ser el\n            primero en formar tu cuerpo completo.\n            <br />\n            Permanece atento a las jugadas de los demás, porque tendrás que\n            evitar que el resto de jugadores terminen su cuerpo antes que tú.\n          </Card.Text>\n          <Card.Title className=\"mt-4\">\n            <p className=\"secondary-title text-center\">Fases del juego</p>\n          </Card.Title>\n          <Card.Text className=\"mt-4 text-justify\">\n            <b>● FASE 1: Jugar o descartar. </b>\n            Jugar una única carta de tu mano o descarta las cartas que se desee.\n            <br />\n            <br />\n            <b>● FASE 2: Robar. </b>\n            Tu mano se completará automáticamente cuando termine tu turno.\n            <br />\n            <br />\n            <b>● FASE 3: Pasar. </b>\n            Pasa el turno al jugador de tu derecha.\n          </Card.Text>\n          <Card.Title className=\"mt-4\">\n            <p className=\"secondary-title text-center\">Tipos de carta</p>\n          </Card.Title>\n          <Card.Title className=\"mt-4\">\n            <p className=\"tertiary-title text-left\">Órganos</p>\n          </Card.Title>\n          <Row className=\"align-items-center justify-content-center mt-4\">\n            <Card.Img className=\"help-component-image mt-2\" src={organ1} />\n            <Card.Img className=\"help-component-image mt-2\" src={organ2} />\n            <Card.Img className=\"help-component-image mt-2\" src={organ3} />\n            <Card.Img className=\"help-component-image mt-2\" src={organ4} />\n            <Card.Img className=\"help-component-image mt-2\" src={organ5} />\n          </Row>\n          <Card.Text className=\"mt-4 text-justify\">\n            Usa las cartas de virus para destruir los órganos y medicinas de tus\n            rivales. Los virus sólo tienen efecto sobre órganos y medicinas de\n            su mismo color.\n            <br />\n            <br />\n            El órgano multicolor actúa como un comodín para ayudarte a completar\n            tu cuerpo y cuenta como órgano a todos sus efectos. Puede vacunarse\n            con una medicina de cualquier color, pero también puede ser\n            infectado por un virus de cualquier color.\n          </Card.Text>\n          <Card.Title className=\"mt-4\">\n            <hr />\n            <p className=\"tertiary-title text-left\">Virus</p>\n          </Card.Title>\n          <Row className=\"align-items-center justify-content-center mt-4\">\n            <Card.Img className=\"help-component-image mt-2\" src={virus1} />\n            <Card.Img className=\"help-component-image mt-2\" src={virus2} />\n            <Card.Img className=\"help-component-image mt-2\" src={virus3} />\n            <Card.Img className=\"help-component-image mt-2\" src={virus4} />\n            <Card.Img className=\"help-component-image mt-2\" src={virus5} />\n          </Row>\n          <Card.Text className=\"mt-4 text-justify\">\n            <b>● INFECTAR:</b> Coloca una carta de virus sobre un órgano libre\n            de su color para infectarlo. No podrás completar tu cuerpo si alguno\n            de tus órganos está infectado por un virus.\n            <br />\n            <br />\n            <b>● EXTIRPAR:</b> Destruye un órgano infectado. Coloca un segundo\n            virus sobre un órgano ya infectado: Este órgano es destruido y las\n            tres cartas van a parar a los descartes.\n            <br />\n            <br />\n            <b>● DESTRUIR VACUNA:</b> Destruye una vacuna. Elimina una carta de\n            medicina que se encuentre sobre un órgano. Envía el virus y la\n            medicina a los descartes.\n            <br />\n            <br />\n            <b>● VIRUS MULTICOLOR:</b> Este virus comodín puede infectar un\n            órgano o destruir una vacuna de cualquier color. Sin embargo,\n            también puede ser curado por medicinas de cualquier color.\n          </Card.Text>\n          <Card.Title className=\"mt-4\">\n            <hr />\n            <p className=\"tertiary-title text-left\">Medicinas</p>\n          </Card.Title>\n          <Row className=\"align-items-center justify-content-center mt-4\">\n            <Card.Img className=\"help-component-image mt-2\" src={medicina1} />\n            <Card.Img className=\"help-component-image mt-2\" src={medicina2} />\n            <Card.Img className=\"help-component-image mt-2\" src={medicina3} />\n            <Card.Img className=\"help-component-image mt-2\" src={medicina4} />\n            <Card.Img className=\"help-component-image mt-2\" src={medicina5} />\n          </Row>\n          <Card.Text className=\"mt-4 text-justify\">\n            <b>● CURAR:</b> Destruye un virus. Utiliza una carta de medicina\n            para descartar un virus de su mismo color que se encuentre sobre un\n            órgano.\n            <br />\n            <br />\n            <b>● VACUNAR:</b> Protege un órgano. Coloca una medicina sobre un\n            órgano libre de su mismo color. Ahora tus rivales necesitan dos\n            virus para infectar tu órgano.\n            <br />\n            <br />\n            <b>● INMUNIZAR:</b> Coloca una segunda medicina sobre un órgano.\n            Este queda protegido para siempre contra el ataque de cualquier\n            virus y no podrá ser destruido ni afectado por cartas de\n            tratamiento.\n            <br />\n            <br />\n            <b>● MEDICINAS MULTICOLOR:</b> Estas medicinas son comodines.\n            Utilízalas para curar virus o vacunar órganos de cualquier color.\n            Del mismo modo, pueden ser destruidas por virus de cualquier color.\n          </Card.Text>\n          <Card.Title className=\"mt-4\">\n            <hr />\n            <p className=\"tertiary-title text-left\">Tratamientos</p>\n          </Card.Title>\n          <Card.Text className=\"mt-4 text-justify\">\n            Las cartas de tratamiento pueden alterar el juego para ayudarte a\n            ganar. Utilízalas en tu beneficio o para evitar que tus rivales\n            completen su cuerpo antes que tú.\n            <br />\n            <br />\n            <b>● TRASPLANTE:</b> Intercambia un órgano por otro entre dos\n            jugadores cualesquiera. No importa si el color de estos órganos es\n            diferente, ni si están sanos, infectados o vacunados. Sencillamente\n            el jugador cambia el órgano escogido por otro, siempre y cuando\n            ninguno de los dos jugadores tenga dos órganos del mismo color ni\n            éstos estén inmunizados.\n            <Row className=\"align-items-center justify-content-center mt-4\">\n              <Card.Img\n                className=\"help-component-image mt-2\"\n                src={tratamiento1}\n              />\n            </Row>\n            <br />\n            <br />\n            Para realizar esta acción primero debes arrastrar la carta al órgano\n            del primer jugador con el que quieres intercambiar y lo mismo con el\n            segundo que participa en el transplante.\n            <br />\n            <br />\n            <b>● LADRÓN DE ÓRGANOS:</b> Roba un órgano de otro jugador y añádelo\n            a tu cuerpo. Puedes robar órganos sanos, vacunados o infectados,\n            pero no inmunes. Recuerda que no puedes tener dos órganos del mismo\n            color\n            <Row className=\"align-items-center justify-content-center mt-4\">\n              <Card.Img\n                className=\"help-component-image mt-2\"\n                src={tratamiento2}\n              />\n            </Row>\n            <br />\n            <br />\n            Para realizar esta acción arrastra la carta de tratamiento al órgano\n            que quieras robar.\n            <br />\n            <br />\n            <b>● CONTAGIO:</b> Contagia con tantos virus como puedas de tus\n            órganos infectados a los órganos de los demás jugadores.\n            <Row className=\"align-items-center justify-content-center mt-4\">\n              <Card.Img\n                className=\"help-component-image mt-2\"\n                src={tratamiento3}\n              />\n            </Row>\n            <br />\n            <br />\n            Para realizar esta acción arrastra la carta de tratamiento a\n            cualquier cuerpo y se realizará el contagio de manera aleatoria.\n            <br />\n            <br />\n            <b>● GUANTE DE LÁTEX:</b> Todos los jugadores, excepto el que\n            utiliza el guante, descartan su mano. Su mano será reestablecida de\n            nuevo con cartas nuevas.\n            <Row className=\"align-items-center justify-content-center mt-4\">\n              <Card.Img\n                className=\"help-component-image mt-2\"\n                src={tratamiento4}\n              />\n            </Row>\n            <br />\n            <br />\n            Para realizar esta acción arrastra la carta de tratamiento a\n            cualquier cuerpo.\n            <br />\n            <br />\n            <b>● ERROR MÉDICO:</b> Intercambia todo tu cuerpo por el de otro\n            jugador, incluyendo órganos, virus y vacunas. No importa el número\n            de cartas que cada uno tenga. Cuando usas esta carta, los órganos\n            inmunizados también son intercambiados.\n            <Row className=\"align-items-center justify-content-center mt-4\">\n              <Card.Img\n                className=\"help-component-image mt-2\"\n                src={tratamiento5}\n              />\n            </Row>\n            <br />\n            <br />\n            Para realizar esta acción arrastra la carta de tratamiento al cuerpo\n            del jugador con el que quieras intercambiar el cuerpo.\n          </Card.Text>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nexport function renderHelpPopup() {\n  const content = <HelpPopup />;\n  PopupboxManager.open({\n    content,\n    config: {\n      fadeIn: true,\n      fadeInSpeed: 400,\n      fadeOut: true,\n      fadeOutSpeed: 400,\n    },\n  });\n}\n","export default __webpack_public_path__ + \"static/media/logout.fb36a716.svg\";","import React, { useContext, useEffect } from \"react\";\nimport { Col, Row, Image } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Chat from \"./Chat\";\nimport Board from \"./Board\";\nimport Timer from \"./Timer\";\n\nimport { renderPausePopup } from \"./popups/PausePopup\";\nimport { renderErrorPopup } from \"./popups/ErrorPopup\";\nimport { renderLeaderboardPopup } from \"./popups/LeaderboardPopup\";\nimport { renderLeaveGamePopup } from \"./popups/LeaveGamePopup\";\nimport { renderHelpPopup } from \"./popups/HelpPopup\";\n\nimport { SessionContext } from \"./SessionProvider\";\nimport { GameContext } from \"./GameProvider\";\n\nimport { getBoard } from \"../utils/json\";\n\nimport pauseIcon from \"../assets/common/icons/pause.svg\";\nimport exit from \"../assets/common/icons/logout.svg\";\nimport help from \"../assets/common/icons/help.svg\";\n\nfunction Match() {\n  const {\n    socket,\n    updateSocket,\n    setUpdateSocket,\n    userData,\n    socketChange,\n  } = useContext(SessionContext);\n\n  const { isPrivate, isPaused, pausedBy, isFinished, leaderboard } = useContext(\n    GameContext\n  );\n\n  const history = useHistory();\n  const board = getBoard(userData.board)[0];\n\n  useEffect(() => {\n    // If socket null, (e.g. when disconnected) go back to menu\n    if (!socket.current) {\n      setUpdateSocket((updateSocket + 1) % 2);\n      history.push(\"/home\");\n    }\n  }, []);\n\n  useEffect(() => {\n    // Ha habido una pausa por parte de otro usuario\n    if (isPaused && pausedBy != userData.name) {\n      renderPausePopup();\n    }\n  }, [isPaused, pausedBy]);\n\n  useEffect(() => {\n    // La partida ha terminado\n    if (isFinished) {\n      renderLeaderboardPopup(socket);\n    }\n  }, [isFinished, leaderboard]);\n\n  // Listen to \"game_cancelled\" events from server\n  useEffect(() => {\n    if (!socket.current) {\n      return;\n    }\n    socket.current.once(\"game_cancelled\", () => {\n      if (!isFinished) {\n        renderErrorPopup(\n          \"Todos los rivales han abandonado\",\n          \"Partida terminada\"\n        );\n      }\n      // Get out of match\n      // When leaving, change updateSocket to get a new socket\n      setUpdateSocket((updateSocket + 1) % 2);\n      history.push(\"/home\");\n      return;\n    });\n\n    return () => {\n      socket.current.off(\"game_cancelled\");\n    };\n  }, [socketChange, isFinished]);\n\n  const pauseGame = async (e) => {\n    e.preventDefault();\n    socket.current.emit(\"pause_game\", true, (data) => {\n      if (data && data.error) {\n        renderErrorPopup(data.error);\n      } else {\n        renderPausePopup();\n      }\n    });\n  };\n\n  return (\n    <Row className=\"m-0 p-0 flex-nowrap\">\n      <Col\n        md={8}\n        lg={9}\n        className=\"px-3 py-2 d-flex flex-column border-right border-dark\"\n        style={{ backgroundImage: `url(${board})` }}\n      >\n        <Row className=\"mx-0 justify-content-between\">\n          <Image\n            src={exit}\n            className=\"game-icon\"\n            onClick={() => renderLeaveGamePopup(isPrivate)}\n          />\n          <Timer />\n          <div>\n            {isPrivate && (\n              <Image\n                src={pauseIcon}\n                className=\"game-icon mr-2\"\n                onClick={pauseGame}\n              />\n            )}\n            <Image\n              src={help}\n              className=\"game-icon\"\n              onClick={() => renderHelpPopup()}\n            />\n          </div>\n        </Row>\n        <Row className=\"mx-0 flex-grow-1\">\n          <Board />\n        </Row>\n      </Col>\n      <Col md={4} lg={3} className=\"p-0\">\n        <Chat />\n      </Col>\n    </Row>\n  );\n}\n\nexport default Match;\n","import React, { useState, useContext } from \"react\";\nimport { Card, Form, Button, Container, Row } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { loginUser } from \"../utils/api\";\n\nimport { renderErrorPopup } from \"./popups/ErrorPopup\";\n\nimport { SessionContext } from \"./SessionProvider\";\n\nfunction Login() {\n  const session = useContext(SessionContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    loginUser({\n      email,\n      password,\n      setToken: session.setToken,\n    }).then((response) => {\n      if (response != null) {\n        if (\"access_token\" in response) {\n          let token = response.access_token;\n          session.setToken(token);\n          history.push(\"/home\");\n        } else {\n          renderErrorPopup(response.error);\n        }\n      }\n    });\n  };\n\n  return (\n    <Container className=\"app-container col-centered justify-content-center\">\n      <Card className=\"w-100\">\n        <Card.Body>\n          <Row className=\"justify-content-center\">\n            <Card.Title className=\"primary-title text-align-center\">\n              Iniciar Sesión\n            </Card.Title>\n          </Row>\n          <Form className=\"justify-content-center\" onSubmit={handleSubmit}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Contraseña</Form.Label>\n              <Form.Control\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n            <Row className=\"justify-content-end w-100 mt-4\">\n              <Button className=\"primary-button\" type=\"submit\">\n                Iniciar Sesión\n              </Button>\n            </Row>\n          </Form>\n        </Card.Body>\n      </Card>\n      <Container className=\"mt-5\">\n        <Row className=\"justify-content-center secondary-title\">\n          ¿Nuevo en Gatovid?\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Link to=\"/signup\">\n            <Button className=\"secondary-button\">CREAR UNA CUENTA</Button>\n          </Link>\n        </Row>\n      </Container>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Button,\n  Image,\n  Table,\n} from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { logoutUser, getUserStats } from \"../utils/api\";\n\nimport { renderErrorPopup } from \"./popups/ErrorPopup\";\n\nimport { getProfile } from \"../utils/json\";\n\nimport { SessionContext } from \"./SessionProvider\";\n\nfunction Profile() {\n  const session = useContext(SessionContext);\n  const history = useHistory();\n\n  const [picture, setPicture] = useState(\"\");\n  const [games, setGames] = useState(0);\n  const [wins, setWins] = useState(0);\n  const [losses, setLosses] = useState(0);\n  const [timePlayed, setTimePlayed] = useState(0);\n\n  useEffect(() => {\n    if (session.userData.length === 0) return;\n\n    // Url to the image available in \"public\" directory\n    let pictureURL = getProfile(session.userData.picture);\n    setPicture(pictureURL);\n  }, [session.userData.picture]);\n\n  useEffect(() => {\n    if (!session.userData.name) return;\n\n    // Get user stats\n    let username = session.userData.name;\n    getUserStats({ username, setToken: session.setToken }).then((response) => {\n      if (response != null) {\n        if (\"error\" in response) {\n          console.error(response.error);\n        } else {\n          setGames(response.games);\n          setWins(response.wins);\n          setLosses(response.losses);\n          setTimePlayed(response.playtime_mins);\n        }\n      }\n    });\n  }, [session.userData.name]);\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n\n    const response = await logoutUser(session);\n    if (response != null) {\n      if (\"message\" in response) {\n        session.setToken(null);\n        // Clean user data\n        session.setUserData([]);\n      } else {\n        renderErrorPopup(response.error);\n      }\n    }\n  };\n\n  const handleClose = () => {\n    history.push(\"/menu\");\n  };\n\n  return (\n    <Container\n      id=\"profile\"\n      className=\"app-container col-centered justify-content-center\"\n    >\n      <Card className=\"w-100\">\n        <Button className=\"close card-close\" onClick={handleClose}>\n          &times;\n        </Button>\n        <Card.Body>\n          <Row className=\"align-items-center justify-content-center\">\n            <Col>\n              <Row className=\"align-items-center justify-content-center mb-3\">\n                <Card.Title className=\"primary-title text-align-center\">\n                  Mi Perfil\n                </Card.Title>\n              </Row>\n              <Row className=\"align-items-center justify-content-center mb-2\">\n                <Image\n                  src={picture}\n                  className=\"user-profile-image\"\n                  roundedCircle\n                  thumbnail\n                ></Image>\n              </Row>\n              <Row className=\"align-items-center justify-content-center\">\n                <Card.Text>{session.userData.name}</Card.Text>\n              </Row>\n              <Row className=\"align-items-center justify-content-center mb-2\">\n                <Card.Text>{session.userData.email}</Card.Text>\n              </Row>\n              <Row className=\"align-items-center justify-content-center\">\n                <Link to=\"/editProfile\">\n                  <Button className=\"primary-button\">Editar Perfil</Button>\n                </Link>\n              </Row>\n            </Col>\n            <Col>\n              <Row className=\"align-items-center justify-content-center\">\n                <Card.Title className=\"secondary-title text-align-center\">\n                  Estadísticas\n                </Card.Title>\n              </Row>\n              <Card.Body className=\"mx-4 align-items-center justify-content-center\">\n                <Table borderless>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <Card.Title className=\"tertiary-title\">\n                          Partidas jugadas:\n                        </Card.Title>\n                      </td>\n                      <td>\n                        <Card.Text>{games}</Card.Text>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <Card.Title className=\"tertiary-title\">\n                          Partidas ganadas:\n                        </Card.Title>\n                      </td>\n                      <td>\n                        <Card.Text>{wins}</Card.Text>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <Card.Title className=\"tertiary-title\">\n                          Partidas perdidas:\n                        </Card.Title>\n                      </td>\n                      <td>\n                        <Card.Text>{losses}</Card.Text>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <Card.Title className=\"tertiary-title\">\n                          Tiempo jugado:\n                        </Card.Title>\n                      </td>\n                      <td>\n                        <Card.Text>{timePlayed} min</Card.Text>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card.Body>\n              <Card.Body>\n                <Row className=\"align-items-center justify-content-center\">\n                  <Button className=\"alert-button\" onClick={handleClick}>\n                    Cerrar Sesión\n                  </Button>\n                </Row>\n              </Card.Body>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Profile;\n","import React from \"react\";\nimport { PopupboxManager } from \"react-popupbox\";\nimport { Row, Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { deleteUser } from \"../../utils/api\";\n\nimport Popup from \"./PopUp\";\nimport { renderErrorPopup } from \"./ErrorPopup\";\n\nexport default function DeleteAccountPopup({ token, setToken }) {\n  const history = useHistory();\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n\n    const response = await deleteUser({ token });\n\n    if (response != null) {\n      if (\"message\" in response) {\n        setToken(null);\n        PopupboxManager.close();\n        history.push(\"/login\");\n      } else {\n        renderErrorPopup(response.error);\n      }\n    }\n  };\n\n  return (\n    <Popup title=\"¿Eliminar su cuenta\">\n      <Row className=\"align-items-center justify-content-center\">\n        <h2 className=\"popup-title mb-0\">permanentemente?</h2>\n      </Row>\n      <Row>\n        <Button\n          className=\"alert-button mb-3 mt-4\"\n          style={{ width: \"100%\" }}\n          onClick={handleClick}\n        >\n          Sí\n        </Button>\n      </Row>\n      <Row>\n        <Button\n          className=\"tertiary-button\"\n          style={{ width: \"100%\" }}\n          onClick={PopupboxManager.close}\n        >\n          No\n        </Button>\n      </Row>\n    </Popup>\n  );\n}\n\nexport function renderDeleteAccountPopup({ token, setToken }) {\n  const content = <DeleteAccountPopup token={token} setToken={setToken} />;\n  PopupboxManager.open({\n    content,\n    config: {\n      fadeIn: true,\n      fadeInSpeed: 400,\n      fadeOut: true,\n      fadeOutSpeed: 50,\n      escClose: false,\n      overlayClose: false,\n    },\n  });\n}\n","export default __webpack_public_path__ + \"static/media/camera.106e3e17.svg\";","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Button,\n  Form,\n  Image,\n} from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { renderDeleteAccountPopup } from \"./popups/DeleteAccountPopup\";\nimport { renderErrorPopup } from \"./popups/ErrorPopup\";\nimport { getUserData, modifyUser } from \"../utils/api\";\n\nimport { getProfile } from \"../utils/json\";\nimport camera from \"../assets/common/icons/camera.svg\";\nimport boards from \"../assets/common/boards.json\";\n\nimport { SessionContext } from \"./SessionProvider\";\n\nfunction EditProfile() {\n  const session = useContext(SessionContext);\n  const history = useHistory();\n\n  const [picture, setPicture] = useState(\"\");\n  const [board, setBoard] = useState(\"\");\n  const [newUserName, setNewUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  useEffect(() => {\n    if (session.userData.length === 0) return;\n\n    // Url to the image available in \"public\" directory\n    let pictureURL = getProfile(session.userData.picture);\n\n    setPicture(pictureURL);\n  }, [session.userData.picture]);\n\n  useEffect(() => {\n    if (session.userData.length === 0) return;\n\n    // Url to the image available in \"public\" directory\n    let boardURL =\n      process.env.PUBLIC_URL + \"/\" + boards[session.userData.board].image;\n    setBoard(boardURL);\n  }, [session.userData.board]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Check if passwords match\n    if (password != confirmPassword) {\n      renderErrorPopup(\"Las contraseñas no coiciden.\");\n      return;\n    } else {\n      // Update user configuration calling API function\n      let data = new URLSearchParams();\n      if (newUserName && newUserName !== \"\") data.append(`name`, newUserName);\n      if (password && password !== \"\") data.append(`password`, password);\n\n      modifyUser({\n        token: session.token,\n        data,\n        setToken: session.setToken,\n      }).then((response) => {\n        if (response != null) {\n          if (\"message\" in response) {\n            // Update local user_data as server has just updated\n            getUserData(session).then((response) => {\n              if (response != null) {\n                if (\"error\" in response) {\n                  console.error(response.error);\n                } else {\n                  session.setUserData({\n                    email: response.email,\n                    name: response.name,\n                    coins: response.coins,\n                    picture: response.picture,\n                    board: response.board,\n                    purchases: response.purchases,\n                  });\n                }\n              }\n            });\n          } else {\n            if (response.error != \"Ningún campo a modificar\") {\n              //Sorry :(\n              renderErrorPopup(response.error);\n            }\n          }\n        }\n      });\n    }\n  };\n\n  const handleClose = () => {\n    history.push(\"/menu\");\n  };\n\n  return (\n    <Container\n      id=\"editProfile\"\n      className=\"app-container col-centered justify-content-center\"\n    >\n      <Card>\n        <Button className=\"close card-close\" onClick={handleClose}>\n          &times;\n        </Button>\n        <Card.Body>\n          <Row className=\"align-items-center justify-content-center\">\n            <Col>\n              <Row className=\"align-items-center justify-content-center mb-3\">\n                <Card.Title className=\"primary-title text-align-center\">\n                  Configuración\n                </Card.Title>\n              </Row>\n              <Row\n                id=\"btnImageChange\"\n                className=\"align-items-center justify-content-center mb-2\"\n                style={{ position: \"relative\" }}\n              >\n                <Link to=\"/shop\">\n                  <Button className=\"primary-button\">\n                    <Image src={camera} fluid></Image>\n                  </Button>\n                </Link>\n                <Image\n                  src={picture}\n                  className=\"user-profile-image mt-3\"\n                  roundedCircle\n                  thumbnail\n                ></Image>\n              </Row>\n              <Row className=\"align-items-center justify-content-center\">\n                <Card.Text>{session.userData.name}</Card.Text>\n              </Row>\n              <Row className=\"align-items-center justify-content-center mb-2\">\n                <Card.Text>{session.userData.email}</Card.Text>\n              </Row>\n              <Card.Body>\n                <Row className=\"align-items-center justify-content-center\">\n                  <Button\n                    className=\"alert-button\"\n                    onClick={() => renderDeleteAccountPopup(session)}\n                  >\n                    Eliminar Cuenta\n                  </Button>\n                </Row>\n              </Card.Body>\n            </Col>\n            <Col>\n              <Card.Body>\n                <Form\n                  className=\"align-items-center justify-content-center \"\n                  onSubmit={handleSubmit}\n                >\n                  Editar Configuración de Usuario\n                  <Form.Group controlId=\"formBasicUser\" className=\"mb-3 mt-3\">\n                    <Form.Label>Nombre de Usuario</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Nuevo nombre\"\n                      onChange={(e) => setNewUserName(e.target.value)}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicPassword\" className=\"mb-3\">\n                    <Form.Label>Cambiar contraseña</Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder=\"Nueva contraseña\"\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicPassword\" className=\"mb-3\">\n                    <Form.Label>Confirmar contraseña</Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder=\"Nueva contraseña\"\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                    {password != confirmPassword &&\n                      confirmPassword !== undefined && (\n                        <div className=\"text-danger\">\n                          Las contraseñas no coinciden\n                        </div>\n                      )}\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicBoardType\">\n                    <Form.Row className=\"align-items-center justify-content-center mt-4 flex-nowrap\">\n                      <Col md={4}>\n                        <Form.Label>Cambiar Tablero</Form.Label>\n                      </Col>\n                      <Col id=\"imgCambioTablero\">\n                        <Link to=\"/shop\">\n                          <Image rounded src={board} alt=\"Tablero\"></Image>\n                        </Link>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Row className=\"align-items-center justify-content-center\">\n                    <Button\n                      className=\"primary-button\"\n                      type=\"submit\"\n                      style={{ width: \"40vh\" }}\n                    >\n                      GUARDAR\n                    </Button>\n                  </Row>\n                </Form>\n              </Card.Body>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default EditProfile;\n","import React, { useState } from \"react\";\nimport { Card, Container, Form, Row, Button } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { signUpUser } from \"../utils/api\";\n\nimport { renderErrorPopup } from \"./popups/ErrorPopup\";\n\nfunction SignUp() {\n  const history = useHistory();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Revisa que las contraseñas sean iguales\n    if (password != confirmPassword) {\n      renderErrorPopup(\"Las contraseñas no coiciden.\");\n      return;\n    }\n\n    const response = await signUpUser({\n      name,\n      email,\n      password,\n      setToken: () => {},\n    });\n\n    if (response != null) {\n      if (\"error\" in response) {\n        renderErrorPopup(response.error);\n      } else {\n        history.push(\"/login\");\n      }\n    }\n  };\n\n  return (\n    <Container className=\"app-container col-centered justify-content-center\">\n      <Card className=\"w-100\">\n        <Card.Body>\n          <Row className=\"justify-content-center\">\n            <Card.Title className=\"primary-title text-align-center\">\n              Crear una cuenta\n            </Card.Title>\n          </Row>\n          <Form className=\"justify-content-center\" onSubmit={handleSubmit}>\n            <Form.Group controlId=\"formBasicUser\">\n              <Form.Label>Nombre de Usuario</Form.Label>\n              <Form.Control\n                type=\"text\"\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Contraseña</Form.Label>\n              <Form.Control\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Confirmar contraseña</Form.Label>\n              <Form.Control\n                type=\"password\"\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              />\n              {password != confirmPassword && confirmPassword !== undefined && (\n                <div className=\"text-danger\">Las contraseñas no coinciden</div>\n              )}\n            </Form.Group>\n            <Row className=\"justify-content-end w-100 mt-4\">\n              <Button className=\"primary-button\" type=\"submit\">\n                Registrarse\n              </Button>\n            </Row>\n          </Form>\n        </Card.Body>\n      </Card>\n      <Container className=\"mt-5\">\n        <Row className=\"justify-content-center secondary-title\">\n          ¿Ya tienes cuenta?\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Link to=\"/login\">\n            <Button className=\"secondary-button\">INICIAR SESIÓN</Button>\n          </Link>\n        </Row>\n      </Container>\n    </Container>\n  );\n}\n\nexport default SignUp;\n","export default __webpack_public_path__ + \"static/media/candado.947e8e56.svg\";","export default __webpack_public_path__ + \"static/media/check.07e4af41.svg\";","import React, { useContext } from \"react\";\nimport { PopupboxManager } from \"react-popupbox\";\nimport { Row, Button, Image } from \"react-bootstrap\";\n\nimport Popup from \"./PopUp\";\nimport { renderErrorPopup } from \"./ErrorPopup\";\nimport { shopBuy, getUserData } from \"../../utils/api\";\nimport { SessionContext } from \"../SessionProvider\";\n\nimport coins from \"../../assets/common/icons/huella.svg\";\n\nexport default function ConfirmPurchasePopup({ id, type, price }) {\n  const session = useContext(SessionContext);\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n\n    let data = new URLSearchParams();\n    data.append(`id`, id);\n    data.append(`type`, type);\n\n    const response = await shopBuy({\n      token: session.token,\n      data,\n      setToken: session.setToken,\n    });\n\n    if (response != null) {\n      if (\"message\" in response) {\n        // Update local user_data as server has just updated\n        getUserData(session).then((response) => {\n          if (response != null) {\n            if (\"error\" in response) {\n              console.error(response.error);\n            } else {\n              session.setUserData({\n                email: response.email,\n                name: response.name,\n                coins: response.coins,\n                picture: response.picture,\n                board: response.board,\n                purchases: response.purchases,\n              });\n            }\n          }\n        });\n        PopupboxManager.close();\n      } else {\n        renderErrorPopup(response.error);\n      }\n    }\n  };\n\n  return (\n    <Popup title=\"¿Quiere comprar el artículo?\" close={true}>\n      <Row className=\"coins shop justify-content-center align-items-center\">\n        <span className=\"mr-2\">{price}</span>\n        <Image src={coins} alt=\"Precio\" />\n      </Row>\n      <Row>\n        <Button\n          className=\"success-button mb-3 mt-4\"\n          style={{ width: \"100%\" }}\n          onClick={handleClick}\n        >\n          Sí\n        </Button>\n      </Row>\n      <Row>\n        <Button\n          className=\"alert-button\"\n          style={{ width: \"100%\" }}\n          onClick={PopupboxManager.close}\n        >\n          No\n        </Button>\n      </Row>\n    </Popup>\n  );\n}\n\nexport function renderConfirmPurchasePopup(id, type, price) {\n  const content = <ConfirmPurchasePopup id={id} type={type} price={price} />;\n  PopupboxManager.open({\n    content,\n    config: {\n      fadeIn: true,\n      fadeInSpeed: 400,\n      fadeOut: true,\n      fadeOutSpeed: 50,\n      escClose: false,\n      overlayClose: false,\n    },\n  });\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Card, Image, Row, Col } from \"react-bootstrap\";\n\nimport { getBoard } from \"../utils/json\";\nimport { getAvatar } from \"../utils/json\";\nimport { getUserData, modifyUser } from \"../utils/api\";\n\nimport lock from \"../assets/common/icons/candado.svg\";\nimport coinImg from \"../assets/common/icons/huella.svg\";\nimport check from \"../assets/common/icons/check.svg\";\n\nimport { SessionContext } from \"./SessionProvider\";\nimport { renderConfirmPurchasePopup } from \"./popups/ConfirmPurchasePopup\";\nimport { renderErrorPopup } from \"./popups/ErrorPopup\";\n\nfunction PurchasableBox({ index, type }) {\n  const session = useContext(SessionContext);\n  const [isBought, setIsBought] = useState(false);\n  const [isSelected, setIsSelected] = useState(false);\n  let [elt, eltPrice] = type == \"board\" ? getBoard(index) : getAvatar(index);\n\n  useEffect(() => {\n    // Check if element is bought\n    if (session.userData.purchases) {\n      setIsBought(\n        session.userData.purchases.some(\n          (elem) => elem.type == type && elem.item_id == index\n        )\n      );\n    }\n  }, [session.userData.purchases]);\n\n  // Check if element is selected\n  useEffect(() => {\n    if (type == \"profile_pic\") {\n      if (session.userData.picture == index) {\n        setIsSelected(true);\n      } else {\n        setIsSelected(false);\n      }\n    } else {\n      if (session.userData.board == index) {\n        setIsSelected(true);\n      } else {\n        setIsSelected(false);\n      }\n    }\n  }, [session.userData.picture, session.userData.board]);\n\n  function changeUserData() {\n    // If it is already selected disable the call\n    if (!isSelected) {\n      // Update user configuration calling API function\n      let data = new URLSearchParams();\n      if (type == \"profile_pic\") data.append(`picture`, index);\n      else data.append(`board`, index);\n      modifyUser({\n        token: session.token,\n        data,\n        setToken: session.setToken,\n      }).then((response) => {\n        if (response != null) {\n          if (\"message\" in response) {\n            // Update local user_data as server has just updated\n            getUserData(session).then((response) => {\n              if (response != null) {\n                if (\"error\" in response) {\n                  console.error(response.error);\n                } else {\n                  session.setUserData({\n                    email: response.email,\n                    name: response.name,\n                    coins: response.coins,\n                    picture: response.picture,\n                    board: response.board,\n                    purchases: response.purchases,\n                  });\n                }\n              }\n            });\n          } else {\n            renderErrorPopup(response.error);\n          }\n        }\n      });\n    }\n  }\n\n  return isBought ? (\n    <Card\n      className=\"purchasable-component p-0 my-3 ml-sm-4 ml-md-2\"\n      onClick={() => changeUserData()}\n    >\n      <Card.Img\n        className=\"purchasable-component-image\"\n        src={elt}\n        rounded=\"true\"\n      />\n      {isSelected ? (\n        <Card.ImgOverlay className=\"align-items-center justify-content-center\">\n          <Image className=\"check-image\" src={check} roundedCircle />\n        </Card.ImgOverlay>\n      ) : null}\n    </Card>\n  ) : (\n    <Card\n      className=\"purchasable-component p-0 my-3 ml-sm-4 ml-md-2\"\n      onClick={() => renderConfirmPurchasePopup(index, type, eltPrice)}\n    >\n      <Card.Img\n        className=\"purchasable-component-image\"\n        src={elt}\n        rounded=\"true\"\n      />\n      <Card.ImgOverlay className=\"align-items-center justify-content-center\">\n        <Row className=\"align-items-center justify-content-center\">\n          <Image className=\"box-image\" src={lock} />\n        </Row>\n        <Row className=\"align-items-center justify-content-center\">\n          <Card className=\"coins-box\">\n            <Row className=\"p-0 m-0 ml-2 flex-nowrap\">\n              <Col className=\"p-0 flex-grow-0\">{eltPrice}</Col>\n              <Col className=\"p-0 flex-grow-0 ml-1 mr-2\">\n                <Image className=\"coin-image\" src={coinImg} />\n              </Col>\n            </Row>\n          </Card>\n        </Row>\n      </Card.ImgOverlay>\n    </Card>\n  );\n}\n\nexport default PurchasableBox;\n","import React from \"react\";\nimport { Card, Row, Col, Button } from \"react-bootstrap\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport PurchasableBox from \"./PurchasableBox\";\n\nimport boards from \"../assets/common/boards.json\";\nimport profile_pics from \"../assets/common/profile_pics.json\";\n\nfunction PurchasablesList({ title, type }) {\n  const history = useHistory();\n  let elements = type == \"board\" ? boards : profile_pics;\n  // Limit profile_pics to show, all except last: reserved for IA\n  const elemsLength = elements.length;\n  const rangeIA = type == \"board\" ? false : true;\n\n  const handleClose = () => {\n    history.push(\"/menu\");\n  };\n\n  return (\n    <Card className=\"shop-card\">\n      <Button className=\"close card-close\" onClick={handleClose}>\n        &times;\n      </Button>\n      <Card.Body>\n        <Row className=\"justify-content-center align-items-center \">\n          <Card.Title className=\"primary-title text-align-center\">\n            {title}\n          </Card.Title>\n        </Row>\n        <Row className=\"justify-content-start\">\n          {elements.map((elem, idx) =>\n            rangeIA && idx == elemsLength - 1 ? null : (\n              <Col key={idx} sm={12} md={6} lg={4}>\n                <PurchasableBox index={idx} type={type} />\n              </Col>\n            )\n          )}\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default PurchasablesList;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Row, Col, Container, Image, Card } from \"react-bootstrap\";\n\nimport PurchasablesList from \"./PurchasablesList\";\nimport { SessionContext } from \"./SessionProvider\";\n\nimport coinImg from \"../assets/common/icons/huella.svg\";\n\nfunction Shop() {\n  const session = useContext(SessionContext);\n  const [coins, setCoins] = useState(0);\n\n  // Check if element is selected\n  useEffect(() => {\n    console.log(session.userData.coins);\n    if (session.userData.coins) {\n      setCoins(session.userData.coins);\n    }\n  }, [session.userData.coins]);\n\n  return (\n    <Container className=\"justify-content-center h-100 d-flex-column\">\n      <Row className=\"pt-2 m-0\">\n        <Card className=\"money-box px-1 py-0\">\n          <Row className=\"m-0 mb-2 mt-2 ml-3\">\n            <h5 className=\"align-self-center my-0 font-weight-bold\">\n              Saldo gatuno: {coins}\n            </h5>\n            <Image className=\"coin-image-money ml-2\" src={coinImg} />\n          </Row>\n        </Card>\n      </Row>\n      <Row className=\"align-items-start mt-2\">\n        <Col>\n          <PurchasablesList title=\"Tablero\" type=\"board\" />\n        </Col>\n        <Col>\n          <PurchasablesList title=\"Avatar\" type=\"profile_pic\" />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Shop;\n","import React from \"react\";\nimport { Button, Col, Row, Card } from \"react-bootstrap\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport organ1 from \"../assets/common/cards/cuerpo_cerebro.png\";\nimport organ2 from \"../assets/common/cards/cuerpo_corazon.png\";\nimport organ3 from \"../assets/common/cards/cuerpo_estomago.png\";\nimport organ4 from \"../assets/common/cards/cuerpo_hueso.png\";\nimport organ5 from \"../assets/common/cards/cuerpo_full.png\";\n\nimport virus1 from \"../assets/common/cards/virus_a.png\";\nimport virus2 from \"../assets/common/cards/virus_b.png\";\nimport virus3 from \"../assets/common/cards/virus_c.png\";\nimport virus4 from \"../assets/common/cards/virus_d.png\";\nimport virus5 from \"../assets/common/cards/virus_e.png\";\n\nimport medicina3 from \"../assets/common/cards/medicina_jarabe.png\";\nimport medicina2 from \"../assets/common/cards/medicina_jeringuilla.png\";\nimport medicina5 from \"../assets/common/cards/medicina_medikit.png\";\nimport medicina1 from \"../assets/common/cards/medicina_pastis.png\";\nimport medicina4 from \"../assets/common/cards/medicina_tiritas.png\";\n\nimport tratamiento1 from \"../assets/common/cards/especial_operacion.png\";\nimport tratamiento2 from \"../assets/common/cards/especial_robaorganos.png\";\nimport tratamiento3 from \"../assets/common/cards/especial_tos.png\";\nimport tratamiento4 from \"../assets/common/cards/especial_guantes.png\";\nimport tratamiento5 from \"../assets/common/cards/especial_radiografia.png\";\n\nfunction Help() {\n  const history = useHistory();\n\n  const handleClose = () => {\n    history.push(\"/home\");\n  };\n\n  return (\n    <Row className=\"justify-content-center align-items-center mt-4 ml-2 mr-2\">\n      <Col>\n        <Card>\n          <Button className=\"close card-close\" onClick={handleClose}>\n            &times;\n          </Button>\n          <Card.Body>\n            <Card.Title>\n              <p className=\"primary-title text-center\">AYUDA</p>\n            </Card.Title>\n            <Card.Title className=\"mt-4\">\n              <p className=\"secondary-title text-center\">\n                Estructura del tablero\n              </p>\n            </Card.Title>\n            <Card.Text className=\"mt-4 text-justify\">\n              En la parte más inferior aparece tu mano, es decir, las cartas que\n              tienes en todo momento para poder jugar.\n              <br />\n              <br />\n              En mitad de pantalla aparecen 3 componentes: <br />\n              ● Un botón con el que puedes pasar el turno <br />\n              ● El cronómetro, que cuando sea tu turno se activará y podrás ver\n              el tiempo de juego restante en tu turno.\n              <br />\n              ● Un cuadro al que puedes descartar cartas de tu mano. <br />\n              <br />\n              Entre estos componentes y tu mano, se encuentra el espacio para ir\n              colocando las cartas de tu cuerpo. Entre los botones superiores y\n              los componentes mencionados se encuentran los cuerpos de tus\n              oponentes. Puedes colocar en tu turno cartas sobre estos cuerpos.\n            </Card.Text>\n            <Card.Title className=\"mt-4\">\n              <p className=\"secondary-title text-center\">Objetivo del juego</p>\n            </Card.Title>\n            <Card.Text className=\"mt-4 text-justify\">\n              Sé el primer jugador en completar tu cuerpo. Un cuerpo lo forman 4\n              órganos, uno de cada color. Si logras reunir sobre la mesa, frente\n              a ti, tus 4 órganos diferentes sanos, ¡habrás ganado la partida!.\n            </Card.Text>\n            <Card.Title className=\"mt-4\">\n              <p className=\"secondary-title text-center\">Mecánica del juego</p>\n            </Card.Title>\n            <Card.Text className=\"mt-4 text-justify\">\n              Cada jugador debe tener siempre al comienzo de su turno 3 cartas\n              en su mano y tan solo podrá realizar una acción por turno. Después\n              de haber actuado, recibirá cartas del mazo para volver a tener su\n              mano completa. Juega los distintos tipos de carta, colocándolas en\n              el espacio del cuerpo para construirlo, o sobre las cartas de tus\n              rivales para evitar que estos lo logren antes que tú.\n              <br />\n              <br />\n              Algunas cartas pueden obligarte a descartar o cambiar tus órganos,\n              tus vacunas o incluso tu mano. Elabora tu estrategia para ser el\n              primero en formar tu cuerpo completo.\n              <br />\n              Permanece atento a las jugadas de los demás, porque tendrás que\n              evitar que el resto de jugadores terminen su cuerpo antes que tú.\n            </Card.Text>\n            <Card.Title className=\"mt-4\">\n              <p className=\"secondary-title text-center\">Fases del juego</p>\n            </Card.Title>\n            <Card.Text className=\"mt-4 text-justify\">\n              <b>● FASE 1: Jugar o descartar. </b>\n              Jugar una única carta de tu mano o descarta las cartas que se\n              desee.\n              <br />\n              <br />\n              <b>● FASE 2: Robar. </b>\n              Tu mano se completará automáticamente cuando termine tu turno.\n              <br />\n              <br />\n              <b>● FASE 3: Pasar. </b>\n              Pasa el turno al jugador de tu derecha.\n            </Card.Text>\n            <Card.Title className=\"mt-4\">\n              <p className=\"secondary-title text-center\">Tipos de carta</p>\n            </Card.Title>\n            <Card.Title className=\"mt-4\">\n              <p className=\"tertiary-title text-left\">Órganos</p>\n            </Card.Title>\n            <Row className=\"align-items-center justify-content-center mt-4\">\n              <Card.Img className=\"help-component-image mt-2\" src={organ1} />\n              <Card.Img className=\"help-component-image mt-2\" src={organ2} />\n              <Card.Img className=\"help-component-image mt-2\" src={organ3} />\n              <Card.Img className=\"help-component-image mt-2\" src={organ4} />\n              <Card.Img className=\"help-component-image mt-2\" src={organ5} />\n            </Row>\n            <Card.Text className=\"mt-4 text-justify\">\n              Usa las cartas de virus para destruir los órganos y medicinas de\n              tus rivales. Los virus sólo tienen efecto sobre órganos y\n              medicinas de su mismo color.\n              <br />\n              <br />\n              El órgano multicolor actúa como un comodín para ayudarte a\n              completar tu cuerpo y cuenta como órgano a todos sus efectos.\n              Puede vacunarse con una medicina de cualquier color, pero también\n              puede ser infectado por un virus de cualquier color.\n            </Card.Text>\n            <Card.Title className=\"mt-4\">\n              <hr />\n              <p className=\"tertiary-title text-left\">Virus</p>\n            </Card.Title>\n            <Row className=\"align-items-center justify-content-center mt-4\">\n              <Card.Img className=\"help-component-image mt-2\" src={virus1} />\n              <Card.Img className=\"help-component-image mt-2\" src={virus2} />\n              <Card.Img className=\"help-component-image mt-2\" src={virus3} />\n              <Card.Img className=\"help-component-image mt-2\" src={virus4} />\n              <Card.Img className=\"help-component-image mt-2\" src={virus5} />\n            </Row>\n            <Card.Text className=\"mt-4 text-justify\">\n              <b>● INFECTAR:</b> Coloca una carta de virus sobre un órgano libre\n              de su color para infectarlo. No podrás completar tu cuerpo si\n              alguno de tus órganos está infectado por un virus.\n              <br />\n              <br />\n              <b>● EXTIRPAR:</b> Destruye un órgano infectado. Coloca un segundo\n              virus sobre un órgano ya infectado: Este órgano es destruido y las\n              tres cartas van a parar a los descartes.\n              <br />\n              <br />\n              <b>● DESTRUIR VACUNA:</b> Destruye una vacuna. Elimina una carta\n              de medicina que se encuentre sobre un órgano. Envía el virus y la\n              medicina a los descartes.\n              <br />\n              <br />\n              <b>● VIRUS MULTICOLOR:</b> Este virus comodín puede infectar un\n              órgano o destruir una vacuna de cualquier color. Sin embargo,\n              también puede ser curado por medicinas de cualquier color.\n            </Card.Text>\n            <Card.Title className=\"mt-4\">\n              <hr />\n              <p className=\"tertiary-title text-left\">Medicinas</p>\n            </Card.Title>\n            <Row className=\"align-items-center justify-content-center mt-4\">\n              <Card.Img className=\"help-component-image mt-2\" src={medicina1} />\n              <Card.Img className=\"help-component-image mt-2\" src={medicina2} />\n              <Card.Img className=\"help-component-image mt-2\" src={medicina3} />\n              <Card.Img className=\"help-component-image mt-2\" src={medicina4} />\n              <Card.Img className=\"help-component-image mt-2\" src={medicina5} />\n            </Row>\n            <Card.Text className=\"mt-4 text-justify\">\n              <b>● CURAR:</b> Destruye un virus. Utiliza una carta de medicina\n              para descartar un virus de su mismo color que se encuentre sobre\n              un órgano.\n              <br />\n              <br />\n              <b>● VACUNAR:</b> Protege un órgano. Coloca una medicina sobre un\n              órgano libre de su mismo color. Ahora tus rivales necesitan dos\n              virus para infectar tu órgano.\n              <br />\n              <br />\n              <b>● INMUNIZAR:</b> Coloca una segunda medicina sobre un órgano.\n              Este queda protegido para siempre contra el ataque de cualquier\n              virus y no podrá ser destruido ni afectado por cartas de\n              tratamiento.\n              <br />\n              <br />\n              <b>● MEDICINAS MULTICOLOR:</b> Estas medicinas son comodines.\n              Utilízalas para curar virus o vacunar órganos de cualquier color.\n              Del mismo modo, pueden ser destruidas por virus de cualquier\n              color.\n            </Card.Text>\n            <Card.Title className=\"mt-4\">\n              <hr />\n              <p className=\"tertiary-title text-left\">Tratamientos</p>\n            </Card.Title>\n            <Card.Text className=\"mt-4 text-justify\">\n              Las cartas de tratamiento pueden alterar el juego para ayudarte a\n              ganar. Utilízalas en tu beneficio o para evitar que tus rivales\n              completen su cuerpo antes que tú.\n              <br />\n              <br />\n              <b>● TRASPLANTE:</b> Intercambia un órgano por otro entre dos\n              jugadores cualesquiera. No importa si el color de estos órganos es\n              diferente, ni si están sanos, infectados o vacunados.\n              Sencillamente el jugador cambia el órgano escogido por otro,\n              siempre y cuando ninguno de los dos jugadores tenga dos órganos\n              del mismo color ni éstos estén inmunizados.\n              <Row className=\"align-items-center justify-content-center mt-4\">\n                <Card.Img\n                  className=\"help-component-image mt-2\"\n                  src={tratamiento1}\n                />\n              </Row>\n              <br />\n              <br />\n              Para realizar esta acción primero debes arrastrar la carta al\n              órgano del primer jugador con el que quieres intercambiar y lo\n              mismo con el segundo que participa en el transplante.\n              <br />\n              <br />\n              <b>● LADRÓN DE ÓRGANOS:</b> Roba un órgano de otro jugador y\n              añádelo a tu cuerpo. Puedes robar órganos sanos, vacunados o\n              infectados, pero no inmunes. Recuerda que no puedes tener dos\n              órganos del mismo color\n              <Row className=\"align-items-center justify-content-center mt-4\">\n                <Card.Img\n                  className=\"help-component-image mt-2\"\n                  src={tratamiento2}\n                />\n              </Row>\n              <br />\n              <br />\n              Para realizar esta acción arrastra la carta de tratamiento al\n              órgano que quieras robar.\n              <br />\n              <br />\n              <b>● CONTAGIO:</b> Contagia con tantos virus como puedas de tus\n              órganos infectados a los órganos de los demás jugadores.\n              <Row className=\"align-items-center justify-content-center mt-4\">\n                <Card.Img\n                  className=\"help-component-image mt-2\"\n                  src={tratamiento3}\n                />\n              </Row>\n              <br />\n              <br />\n              Para realizar esta acción arrastra la carta de tratamiento a\n              cualquier cuerpo y se realizará el contagio de manera aleatoria.\n              <br />\n              <br />\n              <b>● GUANTE DE LÁTEX:</b> Todos los jugadores, excepto el que\n              utiliza el guante, descartan su mano. Su mano será reestablecida\n              de nuevo con cartas nuevas.\n              <Row className=\"align-items-center justify-content-center mt-4\">\n                <Card.Img\n                  className=\"help-component-image mt-2\"\n                  src={tratamiento4}\n                />\n              </Row>\n              <br />\n              <br />\n              Para realizar esta acción arrastra la carta de tratamiento a\n              cualquier cuerpo.\n              <br />\n              <br />\n              <b>● ERROR MÉDICO:</b> Intercambia todo tu cuerpo por el de otro\n              jugador, incluyendo órganos, virus y vacunas. No importa el número\n              de cartas que cada uno tenga. Cuando usas esta carta, los órganos\n              inmunizados también son intercambiados.\n              <Row className=\"align-items-center justify-content-center mt-4\">\n                <Card.Img\n                  className=\"help-component-image mt-2\"\n                  src={tratamiento5}\n                />\n              </Row>\n              <br />\n              <br />\n              Para realizar esta acción arrastra la carta de tratamiento al\n              cuerpo del jugador con el que quieras intercambiar el cuerpo.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Help;\n","import React, { useEffect, useContext } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport io from \"socket.io-client\";\n\nimport Menu from \"./Menu\";\nimport Match from \"./Match\";\nimport Login from \"./Login\";\nimport Profile from \"./Profile\";\nimport EditProfile from \"./EditProfile\";\nimport SignUp from \"./SignUp\";\nimport Shop from \"./Shop\";\nimport Help from \"./Help\";\n\nimport { getUserData } from \"../utils/api\";\n\nimport { SessionContext } from \"./SessionProvider\";\nimport { NumUsersContext } from \"./UsersProvider\";\n\nfunction App() {\n  const session = useContext(SessionContext);\n  const usersProvider = useContext(NumUsersContext);\n\n  useEffect(() => {\n    if (!session.token || session.userData.length !== 0) {\n      return;\n    }\n\n    // Se piden los datos del usuario\n    getUserData(session).then((response) => {\n      if (response != null) {\n        if (\"error\" in response) {\n          console.error(response);\n        } else {\n          session.setUserData({\n            email: response.email,\n            name: response.name,\n            coins: response.coins,\n            picture: response.picture,\n            board: response.board,\n            purchases: response.purchases,\n          });\n        }\n      }\n    });\n  }, [session.token]);\n\n  useEffect(() => {\n    if (session.token != null) {\n      session.socket.current = io.connect(\"wss://gatovid.herokuapp.com\", {\n        extraHeaders: {\n          Authorization: \"Bearer \" + session.token,\n        },\n      });\n\n      session.socket.current.on(\"connect\", function () {\n        session.setSocketChange((session.socketChange + 1) % 2);\n      });\n\n      session.socket.current.on(\"connect_error\", function () {\n        session.setSocketChange((session.socketChange + 1) % 2);\n      });\n\n      session.socket.current.on(\"users_waiting\", (users) => {\n        usersProvider.setUsers(users);\n      });\n\n      return () => {\n        session.socket.current.close();\n        session.socket.current = null;\n      };\n    }\n  }, [session.token, session.updateSocket]);\n  // De esta forma el useEffect se ejecutará si cambia el token, volviendo\n  // a hacer el connect\n\n  // El token hay que pasarle a todas porque sirve para mantener sesión,\n  // si es null se vuelve a login\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route path=\"/signup\" component={SignUp} />\n\n        <ProtectedRoute path=\"/home\" token={session.token} component={Menu} />\n\n        <ProtectedMatchRoute\n          path=\"/match\"\n          token={session.token}\n          onMatch={session.onMatch}\n          component={Match}\n        />\n\n        <ProtectedRoute\n          path=\"/profile\"\n          token={session.token}\n          component={Profile}\n        />\n\n        <ProtectedRoute\n          path=\"/editProfile\"\n          token={session.token}\n          component={EditProfile}\n        />\n\n        <ProtectedRoute path=\"/shop\" token={session.token} component={Shop} />\n\n        <ProtectedRoute path=\"/help\" token={session.token} component={Help} />\n\n        <Route path=\"/\">\n          {session.token != null ? (\n            <Redirect to=\"/home\" />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        rest.token != null ? (\n          <Component {...rest} {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nconst ProtectedMatchRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        rest.token != null ? (\n          rest.onMatch ? (\n            <Component {...rest} {...props} />\n          ) : (\n            <Redirect to=\"/home\" />\n          )\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport process from \"process\";\nimport ReactDOM from \"react-dom\";\nimport { PopupboxContainer } from \"react-popupbox\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nimport SessionProvider from \"./components/SessionProvider\";\nimport UsersProvider from \"./components/UsersProvider\";\nimport GameProvider from \"./components/GameProvider\";\n\n(async function () {\n  await import(\"./style.css\");\n  await import(\"bootstrap/dist/css/bootstrap.min.css\");\n  await import(\"react-popupbox/dist/react-popupbox.css\");\n})();\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <SessionProvider>\n      <GameProvider>\n        <UsersProvider>\n          <PopupboxContainer />\n          <App />\n        </UsersProvider>\n      </GameProvider>\n    </SessionProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}